{"version":3,"sources":["img/logo.png","util/DBUtil.js","containers/NewsContainer.js","containers/HomeContainer.js","containers/YouTubeVideoContainer.js","util/YouTubeUtil.js","containers/YouTubePlaylistContainer.js","containers/ShowContainer.js","components/DJ.js","containers/DJContainer.js","containers/AboutContainer.js","components/ScheduledProgramDescriptor.js","containers/ScheduleContainer.js","components/YouTubePlayer.js","components/TwitchPlayer.js","util/DataUtil.js","components/VideoHeader.js","components/Player.js","containers/PlayerContainer.js","containers/MailingListFormContainer.js","containers/DJApplicationContainer.js","containers/ArtistApplicationContainer.js","containers/ContactContainer.js","AppRouter.js","components/Logo.js","containers/PlatformLinkContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dataCache","checkForScheduledShow","playScheduledProgramming","handleFetchingPlaylist","undefined","DBConstants","SCHEDULE","videoToPlay","checkForVideoToPlay","shouldPlay","videoId","startTime","Http","XMLHttpRequest","url","buildScheduleURL","onload","e","readyState","status","scheduledShows","JSON","parse","responseText","values","splice","console","error","statusText","open","send","URL_ROOT","schedule","DB_ID","DB_VALUES","APIConstants","KEY","buildNewsUrl","news","buildDjsUrl","djs","parseScheduleData","scheduleData","shows","forEach","show","push","title","COLUMN_HEADERS","SHOW_TITLE","VIDEO_ID","startDate","Date","START_DATE","endDate","END_DATE","showObjects","currentTime","now","NewsContainer","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","props","image","alt","date","text","React","Component","HomeContainer","_this","call","state","page","visableNews","handleFetchedNews","bind","assertThisInitialized","handleNewerStories","handleOlderStories","updateVisibleEpisodes","parsedNews","newsData","newsItem","DATE","TITLE","TEXT","IMAGE","reverse","parseNewsData","setState","slice","setTimeout","scrollToTop","window","scroll","top","left","behavior","NEWS","fetchHipDadNews","newerStoriesExist","olderStoriesExist","length","map","NewsContainer_NewsContainer","id","onClick","hidden","YouTubeVideoContainer","YouTube","description","playlistCache","fetchPlaylistVideos","playlistId","videoIds","nextPageToken","part","callback","requestTail","playlistData","items","item","contentDetails","snippet","YouTubePlaylistContainer","episodes","visableEpisodes","initialEpisodePopulation","handleOlderEpisodes","handleNewerEpisodes","newerVideosExist","olderVideosExist","episode","YouTubeVideoContainer_YouTubeVideoContainer","ShowContainer","Fragment","YouTubePlaylistContainer_YouTubePlaylistContainer","DJ","name","bio","DJContainer","handleFetchedDjs","parsedDjs","djsData","dj","NAME","BIO","parseDjs","DJS","fetchHipDadDjs","DJ_DJ","AboutContainer","DJContainer_DJContainer","ScheduledProgramDescriptor","startDateString","toString","endDateString","substring","indexOf","formatTimeSpanString","ScheduleContainer","upcomingShows","populateSchedule","fetchSchedule","filterSchedule","oldSchedule","timeDif","ScheduledProgramDescriptor_ScheduledProgramDescriptor","YouTubePlayer","opts","height","width","playerVars","controls","isBig","goBigScreen","goSmallScreen","innerHeight","innerWidth","visible","onReady","onInitialize","onStateChange","Twitch","TwitchPlayer","Player","channel","dangerouslySetInnerHTML","__html","shuffle","array","i","j","Math","floor","random","_ref","VideoHeader","videoTitle","PLAYLIST_ID","YTConstants","unstartedSeconds","activePlayer","playing","twitchPlayer","youTubePlayer","bindTwitchPlayer","bindYouTubePlayer","showTwitch","hideTwitch","startYouTubePlayerRunner","startBlockedYouTubeVideoChecker","startYouTubePlayer","handleYouTubeStateChange","addEventListener","PLAYING","OFFLINE","volume","getVolume","fadeOutId","setInterval","self","newVolume","setVolume","clearInterval","PlayerConstants","TWITCH","pauseVideo","YOUTUBE","playVideo","fadeInId","event","target","HDR","PROGRAMMING","nextVideo","getPlayerState","UNSTARTED","videoID","loadVideoById","videos","video","loadPlaylist","playlist","data","getVideoData","ENDED","VideoHeader_VideoHeader","YouTubePlayer_YouTubePlayer","TwitchPlayer_TwitchPlayer","ScheduleContainer_ScheduleContainer","PlayerContainer","Player_Player","MailingListFormContainer","started","startForm","handleChange","handleSubmit","preventDefault","formData","FormData","append","alert","CORS_ROOT","document","getElementById","onSubmit","htmlFor","type","email","onChange","DJApplicationContainer","firstName","lastName","why","handleFirstNameChange","handleLastNameChange","handleEmailChange","handleWhyChange","rows","cols","ArtistApplicationContainer","bandName","website","handleBandNameChange","handleNameChange","handleWebsiteChange","ContactContainer","MailingListFormContainer_MailingListFormContainer","DJApplicationContainer_DJApplicationContainer","ArtistApplicationContainer_ArtistApplicationContainer","Index","HomeContainer_HomeContainer","About","AboutContainer_AboutContainer","PlayerContainer_PlayerContainer","HdrNewshour","ShowContainer_ShowContainer","HDR_ID","HotSandwich","HOT_SANDWICH_ID","HipDadAds","HIP_DAD_ADS_ID","ContactUs","ContactContainer_ContactContainer","Logo","logo","PlatformLinkContainer","href","rel","App","react_router_dom","Logo_Logo","to","exact","activeClassName","react_router","path","component","PlatformLinkContainer_PlatformLinkContainer","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1d45d07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ec50eb0e.png\";","import React from 'react';\n\nimport DBConstants from '../data/DBConstants.json';\nimport APIConstants from '../data/APIConstants.json'\n\n// Cache\nlet dataCache = {};\n\nexport const fetchHipDadDjs = (handleFetchedDjs) => {\n    if (dataCache[DBConstants.DJS] !== undefined) {\n        handleFetchedDjs(dataCache[DBConstants.DJS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildDjsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let djsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let djs = djsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.DJS]\n                    dataCache[DBConstants.DJS] = djs;\n\n                    handleFetchedDjs(djs);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\nexport const fetchHipDadNews = (handleFetchedNews) => {\n    if (dataCache[DBConstants.NEWS] !== undefined) {\n        handleFetchedNews(dataCache[DBConstants.NEWS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildNewsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let newsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let news = newsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.NEWS] = news;\n\n                    handleFetchedNews(news);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that fetches and handles videos to play from google sheets\n */\nexport const checkForScheduledShow = (playScheduledProgramming, handleFetchingPlaylist) => {\n    if (dataCache[DBConstants.SCHEDULE] !== undefined) {\n        let videoToPlay = checkForVideoToPlay(dataCache[DBConstants.SCHEDULE]);\n\n        // If we have a video to play, lets call our callback function with the video's videoId and startTime\n        if (videoToPlay.shouldPlay) {\n            playScheduledProgramming(videoToPlay.videoId, videoToPlay.startTime);\n        } else if (handleFetchingPlaylist) {\n            handleFetchingPlaylist();\n        }\n    } else {\n        // Initiate the http request object\n        const Http = new XMLHttpRequest();\n\n        const url = buildScheduleURL();\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let scheduleData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let scheduledShows = scheduleData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.SCHEDULE] = scheduledShows;\n\n                    let videoToPlay = checkForVideoToPlay(scheduledShows);\n\n                    // If we have a video to play, lets call our callback function with the video's videoId and startTime\n                    if (videoToPlay.shouldPlay) {\n                        playScheduledProgramming(videoToPlay.videoId, videoToPlay.startTime);\n                    } else if (handleFetchingPlaylist) {\n                        handleFetchingPlaylist();\n                    }\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\nexport const fetchSchedule = (callback) => {\n    if (dataCache[DBConstants.SCHEDULE] !== undefined) {\n        callback(dataCache[DBConstants.SCHEDULE]);\n    } else {\n        // Initiate the http request object\n        const Http = new XMLHttpRequest();\n\n        const url = buildScheduleURL();\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let scheduleData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let scheduledShows = scheduleData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.SCHEDULE] = scheduledShows;\n                    callback(dataCache[DBConstants.SCHEDULE]);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that will build the URL that is hit to fetch scheduled show data\n */\nconst buildScheduleURL = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.schedule.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.schedule.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/*\n    Function that will build the URL that is hit to fetch the news\n */\nconst buildNewsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.news.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.news.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/*\n    Function that will build the URL that is hit to fetch the djs\n */\nconst buildDjsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.djs.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.djs.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/* \n    Function that will take the array of arrays of scheduled shows and convert it to an array of objects\n */\nexport const parseScheduleData = (scheduleData) => {\n    let shows = [];\n\n    // Iterate over the scheduleData and turn each array entry into an object\n    scheduleData.forEach(function (show) {\n        shows.push({\n            title: show[DBConstants.values.schedule.COLUMN_HEADERS.SHOW_TITLE],\n            videoId: show[DBConstants.values.schedule.COLUMN_HEADERS.VIDEO_ID],\n            startDate: Date.parse(show[DBConstants.values.schedule.COLUMN_HEADERS.START_DATE]),\n            endDate: Date.parse(show[DBConstants.values.schedule.COLUMN_HEADERS.END_DATE]),\n        });\n    });\n\n    return shows;\n}\n\nexport const parseNewsData = (newsData) => {\n    let news = [];\n\n    newsData.forEach(function (newsItem) {\n        news.push({\n            date: newsItem[DBConstants.values.news.COLUMN_HEADERS.DATE],\n            title: newsItem[DBConstants.values.news.COLUMN_HEADERS.TITLE],\n            text: newsItem[DBConstants.values.news.COLUMN_HEADERS.TEXT],\n            image: newsItem[DBConstants.values.news.COLUMN_HEADERS.IMAGE]\n        })\n    });\n\n    return news.reverse();\n}\n\nexport const parseDjs = (djsData) => {\n    let djs = [];\n\n    djsData.forEach(function (dj) {\n        djs.push({\n            name: dj[DBConstants.values.djs.COLUMN_HEADERS.NAME],\n            bio: dj[DBConstants.values.djs.COLUMN_HEADERS.BIO],\n            image: dj[DBConstants.values.djs.COLUMN_HEADERS.IMAGE],\n        })\n    });\n\n    return djs;\n}\n\nexport const formatTimeSpanString = (props) => {\n    let startDate = new Date(props.startDate);\n    let startDateString = startDate.toString();\n\n    let endDate = new Date(props.endDate);\n    let endDateString = endDate.toString();\n\n    startDateString = startDateString.substring(0, startDateString.indexOf('GMT'));\n\n    endDateString = endDateString.substring(16);\n\n    return (\n        <div>\n            {startDateString} - {endDateString}\n        </div>\n    );\n}\n\n/*\n    Function that will take in scheduleData retreived from google sheets and determine if a video should play\n */\nconst checkForVideoToPlay = (scheduledShows) => {\n    // Convert show data to array of objects\n    let showObjects = parseScheduleData(scheduledShows);\n\n    // Get current time so we know what time we should be looking for in the shows\n    let currentTime = Date.now();\n\n    // Placeholder of video to play\n    let videoToPlay = {\n        shouldPlay: false,\n    };\n\n    // Iterate over each show object to check if we should play it\n    showObjects.forEach(function (show) {\n        if (show.startDate < currentTime && show.endDate > currentTime) {\n            // It looks like we have a show that should play\n            let startTime = 0;\n\n            // Check to see if we're tuning in late!\n            if (currentTime - show.startDate > 60000) {\n                // If we are, adjust the startTime to where we should be\n                startTime = (currentTime - show.startDate) / 1000;\n            }\n\n            // Set videoToPlay to the video as an object with its' videoId and startTime\n            videoToPlay = {\n                shouldPlay: true,\n                videoId: show.videoId,\n                startTime: startTime\n            }\n        }\n    });\n\n    // If we have nothing to play\n    return videoToPlay;\n}","import React from 'react';\n\nexport class NewsContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"GrowingContainer\">\n                <img src={this.props.image} className=\"NewsImageContainer\" alt={this.props.title + \"_IMG\"} />\n                <div className=\"TextContainer\">\n                    <h2>{this.props.title}</h2>\n                    <h4>{this.props.date}</h4>\n                    <p>{this.props.text}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { fetchHipDadNews, parseNewsData } from '../util/DBUtil';\nimport { NewsContainer } from './NewsContainer';\n\n/*\n    Container that holds the Home page\n */\nexport class HomeContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            news: [],\n            visableNews: []\n        }\n\n        this.handleFetchedNews = this.handleFetchedNews.bind(this);\n        this.handleNewerStories = this.handleNewerStories.bind(this);\n        this.handleOlderStories = this.handleOlderStories.bind(this);\n        this.updateVisibleEpisodes = this.updateVisibleEpisodes.bind(this);\n    }\n\n    handleFetchedNews(news) {\n        let parsedNews = parseNewsData(news);\n\n        this.setState({\n            news: parsedNews,\n            visableNews: parsedNews.slice(0, 10)\n        });\n    }\n\n    updateVisibleEpisodes(page) {\n        this.setState({\n            visableNews: this.state.news.slice(page * 10, page * 10 + 10),\n            page: page\n        });\n    }\n\n    handleOlderStories() {\n        setTimeout(this.scrollToTop(), 1000);\n        this.updateVisibleEpisodes(this.state.page + 1)\n    }\n\n    handleNewerStories() {\n        setTimeout(this.scrollToTop(), 1000);\n        this.updateVisibleEpisodes(this.state.page - 1)\n    }\n\n    scrollToTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    componentDidMount() {\n        fetchHipDadNews(this.handleFetchedNews);\n    }\n\n    render() {\n        const newerStoriesExist = this.state.page;\n        const olderStoriesExist = this.state.news.length > (this.state.page + 1) * 10;\n\n        return (\n            <div >\n                <h2>News</h2>\n                {this.state.visableNews.map(news => (\n                    <NewsContainer date={news.date} title={news.title} text={news.text} image={news.image} />\n                ))}\n                <br />\n                <button id=\"Newer News\" onClick={this.handleNewerStories} hidden={!newerStoriesExist}>Newer Stories</button>\n                <button id=\"Older News\" onClick={this.handleOlderStories} hidden={!olderStoriesExist}>Older Stories</button>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport YouTube from 'react-youtube';\n\n/*\n    Container that holds a YouTube video\n */\nexport const YouTubeVideoContainer = (props) => {\n    return (\n        <div>\n            <h3 className=\"TextContainer\">{props.title}</h3>\n            <YouTube videoId={props.src} />\n            <p className=\"TextContainer\">{props.description}</p>\n        </div>\n    )\n}","// We have several constants that we use throughout this file\nimport APIConstants from '../data/APIConstants.json';\n\n// Playlist cache\nlet playlistCache = {};\n\n/* \n    Function that will recursively fetch and populate an array of videoIds\n */\nexport const fetchPlaylistVideos = (playlistId, videoIds, nextPageToken, part, callback) => {\n    if (playlistCache[playlistId] !== undefined) {\n        // We already have the playlist cached so we don't need to make another call\n        callback(playlistCache[playlistId]);\n    } else {\n        // Initiate the http request object\n        let Http = new XMLHttpRequest();\n\n        // The tail of the request will include the playlist id as well as the API key\n        let requestTail = \"&playlistId=\" + playlistId + \"&key=\" + APIConstants.KEY;\n\n        // If we have been passed in a nextPageToken we will want to add that to the end of the requestTail as well\n        requestTail = nextPageToken ? requestTail + \"&pageToken=\" + nextPageToken : requestTail;\n\n        let url = 'https://www.googleapis.com/youtube/v3/playlistItems?part=' + part + '&maxResults=50' + requestTail;\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and append each item to the list of videoIds\n                    let playlistData = JSON.parse(Http.responseText);\n                    playlistData.items.forEach(function (item) {\n                        videoIds.push({\n                            videoId: item.contentDetails.videoId,\n                            title: item.snippet ? item.snippet.title : undefined,\n                            description: item.snippet ? item.snippet.description : undefined\n                        });\n                    });\n\n                    // If we have a nextPageToken in the response, that means there are more videos to fetch. \n                    if (playlistData.nextPageToken && playlistData.items.length < 199) {\n                        // That means that we will have to fetch more videos! \n                        fetchPlaylistVideos(playlistId, videoIds, playlistData.nextPageToken, part, callback);\n                    } else {\n                        // Assign the videoIds to the playlistCache\n                        playlistCache[playlistId] = videoIds;\n\n                        // Otherwise we have all the videos we need and can start the player\n                        callback(videoIds);\n                    }\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n","import React from 'react';\n\nimport { YouTubeVideoContainer } from './YouTubeVideoContainer';\nimport { fetchPlaylistVideos } from '../util/YouTubeUtil';\n\n/*\n    Container that holds a YouTube playlist\n */\nexport class YouTubePlaylistContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            episodes: [],\n            visableEpisodes: [],\n            page: 0\n        };\n\n        this.updateVisibleEpisodes = this.updateVisibleEpisodes.bind(this);\n        this.initialEpisodePopulation = this.initialEpisodePopulation.bind(this);\n        this.handleOlderEpisodes = this.handleOlderEpisodes.bind(this);\n        this.handleNewerEpisodes = this.handleNewerEpisodes.bind(this);\n    }\n\n    initialEpisodePopulation(episodes) {\n        this.setState({\n            episodes: episodes,\n            visableEpisodes: episodes.slice(0, 5)\n        })\n    }\n\n    updateVisibleEpisodes(page) {\n        this.setState({\n            visableEpisodes: this.state.episodes.slice(page * 5, page * 5 + 5),\n            page: page\n        });\n    }\n\n    handleOlderEpisodes() {\n        this.scrollToTop();\n        this.updateVisibleEpisodes(this.state.page + 1)\n    }\n\n    handleNewerEpisodes() {\n        this.scrollToTop();\n        this.updateVisibleEpisodes(this.state.page - 1)\n    }\n\n    scrollToTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    componentWillMount() {\n        fetchPlaylistVideos(this.props.playlistId, [], undefined, \"contentDetails,snippet\", this.initialEpisodePopulation)\n    }\n\n    render() {\n        // It will render a YouTubeVideoContainer for each episode in its' passed in props.episodes\n        const newerVideosExist = this.state.page;\n        const olderVideosExist = this.state.episodes.length > (this.state.page + 1) * 5;\n\n        return (\n            <div>\n                {this.state.visableEpisodes.map(episode => (\n                    <YouTubeVideoContainer key={episode.videoId} src={episode.videoId} title={episode.title} description={episode.description} />\n                ))}\n                <button id=\"Newer Episode\" onClick={this.handleNewerEpisodes} hidden={!newerVideosExist}>Newer Videos</button>\n                <button id=\"Older Episodes\" onClick={this.handleOlderEpisodes} hidden={!olderVideosExist}>Older Videos</button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { YouTubePlaylistContainer } from './YouTubePlaylistContainer';\n\n/*\n    Container that holds a Show page\n */\nexport class ShowContainer extends React.Component {\n    render() {\n        // Translate the filtered playlist data into YouTubePlaylistContainer components\n        return (\n            <>\n                <h2>{this.props.title} Archive</h2>\n                <div>\n                    <YouTubePlaylistContainer playlistId={this.props.playlistId} />\n                </div>\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport class DJ extends React.Component {\n    render() {\n        return (\n            <div className=\"GrowingContainer\">\n                <img src={this.props.image} className=\"NewsImageContainer\" alt={this.props.name + \"_IMG\"} />\n                <div className=\"DJContainer\">\n                    <h2>{this.props.name}</h2>\n                    <p>{this.props.bio}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { fetchHipDadDjs, parseDjs } from '../util/DBUtil';\nimport { DJ } from '../components/DJ';\n\nexport class DJContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            djs: []\n        }\n\n        this.handleFetchedDjs = this.handleFetchedDjs.bind(this);\n    }\n\n    handleFetchedDjs(djs) {\n        let parsedDjs = parseDjs(djs);\n\n        this.setState({\n            djs: parsedDjs\n        });\n    }\n\n    componentDidMount() {\n        fetchHipDadDjs(this.handleFetchedDjs);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Meet the DJs!</h3>\n                {this.state.djs.map(dj => (\n                    <DJ name={dj.name} bio={dj.bio} image={dj.image} key={dj.name} />\n                ))}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { DJContainer } from './DJContainer';\n\n/*\n    Container that holds the About page\n */\nexport class AboutContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>About Hip Dad Radio</h2>\n                <DJContainer />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { formatTimeSpanString } from '../util/DBUtil';\n\nexport class ScheduledProgramDescriptor extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.title}<br/>\n                {formatTimeSpanString(this.props)}<br/>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { fetchSchedule, parseScheduleData } from '../util/DBUtil';\nimport { ScheduledProgramDescriptor } from '../components/ScheduledProgramDescriptor';\n\nexport class ScheduleContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            schedule: [],\n            upcomingShows: false\n        }\n\n        this.populateSchedule = this.populateSchedule.bind(this);\n    }\n\n    componentWillMount() {\n        fetchSchedule(this.populateSchedule);\n    }\n\n    populateSchedule(schedule) {\n        let scheduleData = parseScheduleData(schedule);\n\n        scheduleData = this.filterSchedule(scheduleData);\n\n        if (scheduleData.length > 0) {\n            this.setState({\n                schedule: scheduleData,\n                upcomingShows: true\n            });\n        }\n    }\n\n    filterSchedule(oldSchedule) {\n        let scheduleData = [];\n        const now = Date.now();\n        oldSchedule.forEach(show => {\n            let timeDif = show.endDate - now;\n            if (0 < timeDif && timeDif < 86400000) {\n                scheduleData.push(show);\n            }\n        });\n\n        return scheduleData;\n    }\n\n    render() {\n        return (\n            <h4 className=\"TextContainer\">\n                <strong>\n                    Scheduled shows:\n                </strong>\n                <br />\n                {!this.state.upcomingShows ? 'No upcoming shows scheduled... Please check back tomorrow!' : ''}\n                {this.state.schedule.map(schedule => (\n                    <ScheduledProgramDescriptor title={schedule.title} startDate={schedule.startDate} endDate={schedule.endDate} key={schedule.title + schedule.startDate} />\n                ))}\n            </h4>\n        )\n    }\n}","import React from 'react';\nimport YouTube from 'react-youtube';\n\nexport class YouTubePlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            opts: {\n                height: '360',\n                width: '640',\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: false\n        };\n\n        this.goBigScreen = this.goBigScreen.bind(this);\n        this.goSmallScreen = this.goSmallScreen.bind(this);\n    }\n\n    goBigScreen() {\n        this.setState({\n            opts: {\n                height: window.innerHeight - 100,\n                width: window.innerWidth - 100,\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: true\n        });\n    }\n\n    goSmallScreen() {\n        this.setState({\n            opts: {\n                height: '360',\n                width: '640',\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: false\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div hidden={!this.props.visible} className=\"noInteraction\">\n                    <YouTube opts={this.state.opts} onReady={this.props.onInitialize} onStateChange={this.props.onStateChange} />\n                </div>\n                <div hidden={!this.props.visible}>\n                    <button onClick={this.goSmallScreen} hidden={!this.state.isBig}>Go Small</button>\n                    <button onClick={this.goBigScreen} hidden={this.state.isBig}>Go Big</button>\n                </div>\n            </>\n        )\n    }\n}","import React from 'react';\n\nconst Twitch = window.Twitch;\n\nexport class TwitchPlayer extends React.Component {\n    componentDidMount() {\n        this.props.onInitialize(new Twitch.Player(\"TwitchPlayer\", { channel: \"hipdadradio\" }));\n    }\n    render() {\n        return (\n            <>\n                <div id=\"TwitchPlayer\" className=\"noInteraction\" hidden={!this.props.visible} />\n                <div dangerouslySetInnerHTML={{ __html: `<iframe id=\"hipdadradio\" src=\"https://www.twitch.tv/embed/hipdadradio/chat\" scrolling=\"yes\" height=\"300\" width=\"640\"></iframe>` }} hidden={!this.props.visible} />\n            </>\n        );\n    }\n}","/*\n    Shuffle helper function randomly reorders an array and returns it\n */\nexport const shuffle = (array) => {\n   for (let i = array.length - 1; i > 0; i--) {\n       const j = Math.floor(Math.random() * (i + 1));\n       [array[i], array[j]] = [array[j], array[i]];\n   }\n   return array;\n}","import React from 'react';\n\nexport const VideoHeader = (props) => {\n    return (\n        <h4 className=\"TextContainer\">\n            <strong>\n                You're Listening to HDR <br />\n                Now Playing: {props.videoTitle} <br />\n            </strong>\n        </h4>\n    )\n}","import React from 'react';\n\nimport { ScheduleContainer } from '../containers/ScheduleContainer';\nimport { YouTubePlayer } from '../components/YouTubePlayer';\nimport { TwitchPlayer } from '../components/TwitchPlayer';\nimport { checkForScheduledShow } from '../util/DBUtil';\nimport { fetchPlaylistVideos } from '../util/YouTubeUtil';\nimport { shuffle } from '../util/DataUtil';\nimport { VideoHeader } from './VideoHeader';\n\nimport PlayerConstants from '../data/PlayerConstants.json';\nimport YTConstants from '../data/YTConstants.json';\n\nconst Twitch = window.Twitch;\n\n// The playlist ID we use to populate a player\nconst PLAYLIST_ID = YTConstants.PLAYLIST_ID\n\n// Variable to keep track of how many seconds the player has waited to start\nlet unstartedSeconds = 0;\n\n\n/*\n    Container that holds the Player page\n */\nexport class Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePlayer: \"\",\n            playing: \"\",\n            videoTitle: \"...\",\n            twitchPlayer: undefined,\n            youTubePlayer: undefined\n        };\n\n        this.bindTwitchPlayer = this.bindTwitchPlayer.bind(this);\n        this.bindYouTubePlayer = this.bindYouTubePlayer.bind(this);\n        this.showTwitch = this.showTwitch.bind(this);\n        this.hideTwitch = this.hideTwitch.bind(this);\n        this.startYouTubePlayerRunner = this.startYouTubePlayerRunner.bind(this);\n        this.startBlockedYouTubeVideoChecker = this.startBlockedYouTubeVideoChecker.bind(this);\n        this.handleFetchingPlaylist = this.handleFetchingPlaylist.bind(this);\n        this.startYouTubePlayer = this.startYouTubePlayer.bind(this);\n        this.playScheduledProgramming = this.playScheduledProgramming.bind(this);\n        this.handleYouTubeStateChange = this.handleYouTubeStateChange.bind(this);\n    }\n\n    bindTwitchPlayer(twitchPlayer) {\n        // Add twitch event listeners here\n        this.setState({ twitchPlayer });\n\n        twitchPlayer.addEventListener(Twitch.Player.PLAYING, this.showTwitch);\n        twitchPlayer.addEventListener(Twitch.Player.OFFLINE, this.hideTwitch);\n    }\n\n    // showTwitch() {\n    //     this.setState({\n    //         activePlayer: PlayerConstants.TWITCH,\n    //         videoTitle: \"Hip Dad Radio: LIVE\"\n    //     });\n\n    //     if (this.state.youTubePlayer) {\n    //         this.state.youTubePlayer.pauseVideo();\n    //     }\n    // }\n\n    // hideTwitch() {\n    //     this.setState({ activePlayer: PlayerConstants.YOUTUBE });\n\n    //     if (this.state.youTubePlayer) {\n    //         this.state.youTubePlayer.playVideo();\n    //     }\n    // }\n\n    showTwitch() {\n        this.setState({ volume: this.state.youTubePlayer.getVolume() });\n\n        let fadeOutId = setInterval(function (self) {\n            if (self.state.volume > 0) {\n                let newVolume = self.state.volume - 5;\n                self.state.youTubePlayer.setVolume(newVolume);\n                self.setState({ volume: newVolume });\n            }\n        }, 250, this);\n\n        setTimeout(function (self) {\n            clearInterval(fadeOutId);\n\n            self.setState({\n                activePlayer: PlayerConstants.TWITCH,\n                videoTitle: \"Hip Dad Radio: LIVE\"\n            });\n\n            if (self.state.youTubePlayer) {\n                self.state.youTubePlayer.pauseVideo();\n            }\n        }, 5000, this);\n    }\n\n    hideTwitch() {\n        this.setState({\n            activePlayer: PlayerConstants.YOUTUBE,\n            volume: this.state.youTubePlayer ? this.state.youTubePlayer.getVolume() : 100\n        });\n\n        if (this.state.youTubePlayer) {\n            this.state.youTubePlayer.playVideo();\n        }\n\n        if (this.state.volume < 100) {\n            this.setState({});\n\n            let fadeInId = setInterval(function (self) {\n                if (self.state.volume < 100) {\n                    let newVolume = self.state.volume + 5;\n                    self.state.youTubePlayer.setVolume(newVolume);\n                    self.setState({ volume: newVolume });\n                }\n            }, 250, this);\n\n            setTimeout(function (self) {\n                clearInterval(fadeInId);\n            }, 5000, this)\n        }\n    }\n\n    bindYouTubePlayer(event) {\n        this.setState({ youTubePlayer: event.target });\n\n        // Check for scheduled programming\n        checkForScheduledShow(this.playScheduledProgramming, this.handleFetchingPlaylist);\n\n        // Start the player runner\n        this.startYouTubePlayerRunner();\n\n        // Start the blocked video checker\n        this.startBlockedYouTubeVideoChecker();\n    }\n\n    /*\n        Function that will start a runner that checks the youtube player state every second\n        Handles state appropriately\n    */\n    startYouTubePlayerRunner() {\n        setInterval(function (self) {\n            if (self.state.playing === PlayerConstants.HDR) {\n                // If HDR is playing we want to check for programming\n                checkForScheduledShow(self.playScheduledProgramming);\n            } else if (self.state.playing === PlayerConstants.PROGRAMMING) {\n                // If programming is already playing we don't really care\n                return;\n            }\n        }, 60000, this);\n    }\n\n    /*\n        Function that will check every second to see if a video playing is blocked and should be skipped\n    */\n    startBlockedYouTubeVideoChecker() {\n        setInterval(\n            function (self) {\n                // If we're playing the playlist check the state of the player\n                if (self.state.playing === PlayerConstants.HDR) {\n                    // If we've been waiting over 2 seconds, skip the video\n                    if (unstartedSeconds > 2) {\n                        // Play the next video and reset the count\n                        self.state.youTubePlayer.nextVideo();\n                        unstartedSeconds = 0;\n                    } else if (self.state.youTubePlayer.getPlayerState() === YTConstants.UNSTARTED) {\n                        // Increment the number of seconds we've been waiting\n                        unstartedSeconds += 1;\n                    } else {\n                        unstartedSeconds = 0;\n                    }\n                }\n            }, 1000, this);\n    }\n\n    /* \n        Helper function that calls fetchPlaylistVideos with all necessary parameters\n     */\n    handleFetchingPlaylist() {\n        // Fetch the playlist videos\n        fetchPlaylistVideos(PLAYLIST_ID, [], undefined, \"contentDetails\", this.startYouTubePlayer);\n    }\n\n    /*\n        Function that will play a scheduled program and update the state of the player\n     */\n    playScheduledProgramming(videoID, startTime) {\n        // Load the video into the player and play it\n        this.state.youTubePlayer.loadVideoById(videoID, startTime);\n        this.state.youTubePlayer.playVideo();\n\n        // Update the currentlyPlaying variable to signal that we're playing scheduled programming\n        this.setState({\n            playing: PlayerConstants.PROGRAMMING,\n            activePlayer: PlayerConstants.YOUTUBE\n        });\n    }\n\n    /* \n        Function that loads a passed in array of videoIds and starts the player\n    */\n    startYouTubePlayer(videos) {\n        videos = videos.map(video => video.videoId)\n\n        this.state.youTubePlayer.loadPlaylist({\n            playlist: shuffle(videos)\n        });\n\n        if (this.state.activePlayer === PlayerConstants.YOUTUBE) {\n            this.state.youTubePlayer.playVideo();\n            this.setState({ playing: PlayerConstants.HDR });\n        }\n    }\n\n    handleYouTubeStateChange(event) {\n        switch (event.data) {\n            case YTConstants.PLAYING:\n                this.setState({\n                    'videoTitle': this.state.youTubePlayer.getVideoData().title,\n                });\n                break;\n            default:\n                break;\n        }\n        // If we're playing scheduled programming\n        if (this.state.playing === PlayerConstants.PROGRAMMING) {\n            // If the programming has ended, we want to checkForScheduledShow again \n            // in case there's something else we should play\n            switch (event.data) {\n                case YTConstants.ENDED:\n                    checkForScheduledShow(this.playScheduledProgramming, this.handleFetchingPlaylist);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <VideoHeader videoTitle={this.state.videoTitle} />\n                <YouTubePlayer onInitialize={this.bindYouTubePlayer} onStateChange={this.handleYouTubeStateChange} visible={this.state.activePlayer === PlayerConstants.YOUTUBE && this.state.youTubePlayer} />\n                <TwitchPlayer onInitialize={this.bindTwitchPlayer} visible={this.state.activePlayer === PlayerConstants.TWITCH && this.state.twitchPlayer} />\n                <ScheduleContainer />\n            </>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Player } from '../components/Player';\n\n/*\n    Container that holds the Player\n */\nexport class PlayerContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <Player />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.1059772933';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLScIj6qyeZSeUX62cCstOZSuVTQIXMjR-ci7J9NSArSuoCWbVQ/formResponse';\n\nexport class MailingListFormContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            value: '',\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.value);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We now have your email address and will sell it to anyone who wants to buy it.\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            value: ''\n        });\n        document.getElementById('mailingListEmail').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"TextContainer\" >\n                <h2>Join Our Mailing List!<button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Looking for more?</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Join our mailing list for updates on all things Hip Dad Radio!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"mailingListEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"mailingListEmail\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} /> <br />\n                        </p>\n                    </section>\n                    <button id=\"MailingListSubmit\" type='submit' hidden={!this.state.value}>Get Those Updates!</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_FIRST_NAME_ID = 'entry.984192258';\nconst GOOGLE_FORM_LAST_NAME_ID = 'entry.327263638';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.1665212900';\nconst GOOGLE_FORM_WHY_ID = 'entry.643621519';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLSf-NgZa7cYLvzydCIHJLzMvSR5WrPG-08c9rm70aYZwh5R_dg/formResponse';\n\nexport class DJApplicationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            why: ''\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleWhyChange = this.handleWhyChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleFirstNameChange(event) {\n        this.setState({ firstName: event.target.value });\n    }\n\n    handleLastNameChange(event) {\n        this.setState({ lastName: event.target.value });\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    handleWhyChange(event) {\n        this.setState({ why: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_FIRST_NAME_ID, this.state.firstName);\n        formData.append(GOOGLE_FORM_LAST_NAME_ID, this.state.lastName);\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\n        formData.append(GOOGLE_FORM_WHY_ID, this.state.why);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We will reach out to you to see what DJ oportunities are available.\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            why: ''\n        });\n        document.getElementById('applicationFirstName').value = '';\n        document.getElementById('applicationLastName').value = '';\n        document.getElementById('applicationEmail').value = '';\n        document.getElementById('applicationWhy').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"TextContainer\" >\n                <h2>Be a Hip Dad DJ!<button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Tell us who you are</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Want to be a Hip Dad Radio DJ? Tell us why!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"applicationFirstName\">\n                                <span>First Name: </span>\n                            </label>\n                            <input id=\"applicationFirstName\" name=\"firstName\" value={this.state.firstName} onChange={this.handleFirstNameChange} />\n                        </p>\n                        <p hidden={!this.state.firstName}>\n                            <label htmlFor=\"applicationLastName\">\n                                <span>Last Name: </span>\n                            </label>\n                            <input id=\"applicationLastName\" name=\"lastName\" value={this.state.lastName} onChange={this.handleLastNameChange} />\n                        </p>\n                        <p hidden={!(this.state.lastName && this.state.firstName)}>\n                            <label htmlFor=\"applicationEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"applicationEmail\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\n                        </p>\n                        <p hidden={!(this.state.email && this.state.lastName && this.state.firstName)}>\n                            <label htmlFor=\"applicationWhy\">\n                                <span>Why HDR: </span>\n                            </label>\n                            <textarea id=\"applicationWhy\" name=\"why\" value={this.state.why} onChange={this.handleWhyChange} rows=\"3\" cols=\"60\" />\n                        </p>\n                    </section>\n                    <button id=\"SubmitButton\" type='submit' hidden={!(this.state.why && this.state.email && this.state.lastName && this.state.firstName)}>Welcome, DJ {this.state.firstName}</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_BAND_NAME_ID = 'entry.267308415';\nconst GOOGLE_FORM_NAME_ID = 'entry.1428062257';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.2009621913';\nconst GOOGLE_FORM_WEBSITE_ID = 'entry.1224946671';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLSfkAY3wK8ORxS4DS2XUu5ch5Xpu6UljrBcuzWVkOW76OWXvyg/formResponse';\n\nexport class ArtistApplicationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            bandName: '',\n            name: '',\n            email: '',\n            website: ''\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleBandNameChange = this.handleBandNameChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleWebsiteChange = this.handleWebsiteChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleBandNameChange(event) {\n        this.setState({ bandName: event.target.value });\n    }\n\n    handleNameChange(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    handleWebsiteChange(event) {\n        this.setState({ website: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_BAND_NAME_ID, this.state.bandName);\n        formData.append(GOOGLE_FORM_NAME_ID, this.state.name);\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\n        formData.append(GOOGLE_FORM_WEBSITE_ID, this.state.website);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We will reach out to you to see what we can make happen!\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            bandName: '',\n            name: '',\n            email: '',\n            website: ''\n        });\n        document.getElementById('artistBandName').value = '';\n        document.getElementById('artistName').value = '';\n        document.getElementById('artistEmail').value = '';\n        document.getElementById('artistWebsite').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"TextContainer\" >\n                <h2>Do a Live Session on Hip Dad Radio! <button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Tell us about your Band</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Are you a muscian and want to perform LIVE on Hip Dad Radio? We'd love to have you on!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"artistBandName\">\n                                <span>Band Name: </span>\n                            </label>\n                            <input id=\"artistBandName\" name=\"bandName\" value={this.state.bandName} onChange={this.handleBandNameChange} />\n                        </p>\n                        <p hidden={!this.state.bandName}>\n                            <label htmlFor=\"artistName\">\n                                <span>Your Name: </span>\n                            </label>\n                            <input id=\"artistName\" name=\"name\" value={this.state.name} onChange={this.handleNameChange} />\n                        </p>\n                        <p hidden={!(this.state.name && this.state.bandName)}>\n                            <label htmlFor=\"artistEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"artistEmail\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\n                        </p>\n                        <p hidden={!(this.state.email && this.state.name && this.state.bandName)}>\n                            <label htmlFor=\"artistWebsite\">\n                                <span>Bandcamp: </span>\n                            </label>\n                            <input id=\"artistWebsite\" name=\"website\" value={this.state.website} onChange={this.handleWebsiteChange} />\n                        </p>\n                    </section>\n                    <button id=\"SubmitButton\" type='submit' hidden={!(this.state.website && this.state.email && this.state.name && this.state.bandName)}>Get {this.state.bandName} on HDR!</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { MailingListFormContainer } from './MailingListFormContainer';\nimport { DJApplicationContainer } from './DJApplicationContainer';\nimport { ArtistApplicationContainer } from './ArtistApplicationContainer';\n\nexport class ContactContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <MailingListFormContainer />\n                <DJApplicationContainer />\n                <ArtistApplicationContainer />\n            </>\n        );\n    }\n}","import React from 'react';\n\nimport { HomeContainer } from './containers/HomeContainer';\nimport { ShowContainer } from './containers/ShowContainer';\nimport { AboutContainer } from './containers/AboutContainer';\nimport { PlayerContainer } from './containers/PlayerContainer';\nimport { ContactContainer } from './containers/ContactContainer';\n\nimport YTConstants from './data/YTConstants.json';\n\n// Home page\nexport const Index = () => {\n  return <HomeContainer />;\n}\n\n// About Page\nexport const About = () => {\n  return <AboutContainer />;\n}\n\nexport const Player = () => {\n  return <PlayerContainer />;\n}\n\n// Hdr Newshour route\nexport const HdrNewshour = () => {\n  return <ShowContainer playlistId={YTConstants.HDR_ID} title=\"HDR Newshour\" />;\n}\n\n// Hot Sandwich route\nexport const HotSandwich = () => {\n  return <ShowContainer playlistId={YTConstants.HOT_SANDWICH_ID} title=\"Hot Sandwich\" />;\n}\n\nexport const HipDadAds = () => {\n  return <ShowContainer playlistId={YTConstants.HIP_DAD_ADS_ID} title=\"Hip Dad Ads\" />\n}\n\nexport const ContactUs = () => {\n  return <ContactContainer title=\"Contact Us\" />\n}\n","import React from 'react';\n\nimport logo from '../img/logo.png'\n\nexport const Logo = () => {\n    return <img src={logo} alt=\"Logo\" className=\"Logo\"/>\n}","import React from 'react';\n\nexport class PlatformLinkContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <p>\n                    <h3>Check us out on our platforms.</h3>\n                    <a className=\"ImageLinks\" href=\"https://www.instagram.com/hipdadradio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"LogoImageContainer\" src=\"http://www.transparentpng.com/thumb/logo-instagram/eerDTf-logo-instagram-clipart-transparent.png\" alt=\"instagramLogo\" /></a>\n                    <a className=\"ImageLinks\" href=\"https://www.youtube.com/channel/UCfdin8x2dLREvJ5M-qAYU3A\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"LogoImageContainer\" src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c545.png\" alt=\"youtubeLogo\" /></a>\n                </p>\n            </>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\nimport { Index, About, HdrNewshour, HotSandwich, HipDadAds, Player, ContactUs } from './AppRouter';\nimport { Logo } from './components/Logo';\nimport { PlatformLinkContainer } from './containers/PlatformLinkContainer';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"Header\">\n          <Logo />\n          <h1>Welcome to Hip Dad Radio!!</h1>\n          <Logo />\n        </header>\n        <nav>\n          <ul>\n            <NavLink to=\"/\" exact activeClassName=\"active\">Home</NavLink>\n            <NavLink to=\"/about/\" exact activeClassName=\"active\">About</NavLink>\n            <NavLink to=\"/player/\" exact activeClassName=\"active\">Player</NavLink>\n            <NavLink to=\"/hdrnewshour/\" exact activeClassName=\"active\">HDR Newshour</NavLink>\n            <NavLink to=\"/hotsandwich/\" exact activeClassName=\"active\">Hot Sandwich</NavLink>\n            <NavLink to=\"/hipdadads/\" exact activeClassName=\"active\">Hip Dad Ads</NavLink>\n            <NavLink to=\"/contact/\" exact activeClassName=\"active\">Contact Us</NavLink>\n          </ul>\n        </nav>\n        <Switch className=\"primary-content\">\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/about/\" component={About} />\n          <Route path=\"/player/\" component={Player} />\n          <Route path=\"/hdrnewshour/\" component={HdrNewshour} />\n          <Route path=\"/hotsandwich/\" component={HotSandwich} />\n          <Route path=\"/hipdadads/\" component={HipDadAds} />\n          <Route path=\"/contact/\" component={ContactUs} />\n        </Switch>\n        <footer>\n          <PlatformLinkContainer />\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}