{"version":3,"sources":["img/logo.png","util/DBUtil.js","containers/NewsContainer.js","containers/HomeContainer.js","containers/YouTubeVideoContainer.js","util/YouTubeUtil.js","containers/YouTubePlaylistContainer.js","containers/ShowContainer.js","components/DJ.js","containers/DJContainer.js","containers/AboutContainer.js","components/ScheduledProgramDescriptor.js","containers/ScheduleContainer.js","components/YouTubePlayer.js","components/TwitchPlayer.js","util/DataUtil.js","components/VideoHeader.js","components/Player.js","containers/PlayerContainer.js","containers/MailingListFormContainer.js","containers/DJApplicationContainer.js","containers/ArtistApplicationContainer.js","containers/ContactContainer.js","components/PhotoArchiveListItem.js","components/PhotoArchivePhoto.js","components/BackToArchiveButton.js","containers/PhotoPageContainer.js","AppRouter.js","components/Logo.js","containers/PlatformLinkContainer.js","components/Dropdown.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dataCache","checkForScheduledShow","playScheduledProgramming","handleFetchingPlaylist","undefined","DBConstants","SCHEDULE","videoToPlay","checkForVideoToPlay","shouldPlay","videoId","startTime","Http","XMLHttpRequest","url","buildScheduleURL","onload","e","readyState","status","scheduledShows","JSON","parse","responseText","values","splice","console","error","statusText","open","send","URL_ROOT","schedule","DB_ID","DB_VALUES","APIConstants","KEY","buildNewsUrl","news","buildDjsUrl","djs","buildPhotosUrl","photos","parseScheduleData","scheduleData","shows","forEach","show","push","title","COLUMN_HEADERS","SHOW_TITLE","VIDEO_ID","startDate","Date","START_DATE","endDate","END_DATE","showObjects","currentTime","now","NewsContainer","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","props","image","alt","date","text","React","Component","HomeContainer","_this","call","state","page","visableNews","handleFetchedNews","bind","assertThisInitialized","handleNewerStories","handleOlderStories","updateVisibleEpisodes","parsedNews","newsData","newsItem","DATE","TITLE","TEXT","IMAGE","reverse","parseNewsData","setState","slice","setTimeout","scrollToTop","window","scroll","top","left","behavior","NEWS","fetchHipDadNews","newerStoriesExist","olderStoriesExist","length","map","NewsContainer_NewsContainer","id","onClick","hidden","YouTubeVideoContainer","YouTube","description","playlistCache","fetchPlaylistVideos","playlistId","videoIds","nextPageToken","part","callback","requestTail","playlistData","items","item","contentDetails","snippet","YouTubePlaylistContainer","episodes","visableEpisodes","initialEpisodePopulation","handleOlderEpisodes","handleNewerEpisodes","newerVideosExist","olderVideosExist","episode","YouTubeVideoContainer_YouTubeVideoContainer","ShowContainer","Fragment","YouTubePlaylistContainer_YouTubePlaylistContainer","DJ","name","bio","DJContainer","handleFetchedDjs","parsedDjs","djsData","dj","NAME","BIO","parseDjs","DJS","fetchHipDadDjs","DJ_DJ","AboutContainer","DJContainer_DJContainer","ScheduledProgramDescriptor","startDateString","toString","endDateString","substring","indexOf","formatTimeSpanString","ScheduleContainer","upcomingShows","populateSchedule","fetchSchedule","filterSchedule","oldSchedule","timeDif","ScheduledProgramDescriptor_ScheduledProgramDescriptor","YouTubePlayer","opts","height","width","playerVars","controls","isBig","goBigScreen","goSmallScreen","innerHeight","innerWidth","visible","onReady","onInitialize","onStateChange","Twitch","TwitchPlayer","Player","channel","dangerouslySetInnerHTML","__html","shuffle","array","i","j","Math","floor","random","_ref","VideoHeader","videoTitle","numberOfListeners","PLAYLIST_ID","YTConstants","unstartedSeconds","activePlayer","playing","round","twitchPlayer","youTubePlayer","bindTwitchPlayer","bindYouTubePlayer","showTwitch","hideTwitch","startYouTubePlayerRunner","startBlockedYouTubeVideoChecker","startYouTubePlayer","handleYouTubeStateChange","addEventListener","PLAYING","OFFLINE","volume","getVolume","fadeOutId","setInterval","self","newVolume","setVolume","clearInterval","PlayerConstants","TWITCH","pauseVideo","YOUTUBE","playVideo","fadeInId","event","target","HDR","PROGRAMMING","nextVideo","getPlayerState","UNSTARTED","videoID","loadVideoById","videos","video","loadPlaylist","playlist","data","getVideoData","ENDED","VideoHeader_VideoHeader","YouTubePlayer_YouTubePlayer","TwitchPlayer_TwitchPlayer","ScheduleContainer_ScheduleContainer","PlayerContainer","Player_Player","MailingListFormContainer","started","startForm","handleChange","handleSubmit","preventDefault","formData","FormData","append","alert","CORS_ROOT","document","getElementById","onSubmit","htmlFor","type","email","onChange","DJApplicationContainer","firstName","lastName","why","handleFirstNameChange","handleLastNameChange","handleEmailChange","handleWhyChange","rows","cols","ArtistApplicationContainer","bandName","website","handleBandNameChange","handleNameChange","handleWebsiteChange","ContactContainer","MailingListFormContainer_MailingListFormContainer","DJApplicationContainer_DJApplicationContainer","ArtistApplicationContainer_ArtistApplicationContainer","PhotoArchiveListItem","handleClick","author","imgSrc","PhotoArchivePhoto","desc","BackToArchiveButton","style","float","PhotoPageContainer","archives","selected","albumSelected","handleFetchedPhotos","handleSelection","unSelect","photoData","currentRow","album","AUTHOR","ALBUM_DESC","IMAGE_SRC","IMAGE_DESC","photoRow","parsePhotoData","PHOTOS","fetchPhotoArchives","scrollIntoView","alignToTop","_this2","archive","PhotoArchiveListItem_PhotoArchiveListItem","BackToArchiveButton_BackToArchiveButton","photo","PhotoArchivePhoto_PhotoArchivePhoto","Index","HomeContainer_HomeContainer","About","AboutContainer_AboutContainer","Listen","PlayerContainer_PlayerContainer","HdrNewshour","ShowContainer_ShowContainer","HDR_ID","HotSandwich","HOT_SANDWICH_ID","HipDadAds","HIP_DAD_ADS_ID","ContactUs","ContactContainer_ContactContainer","Photos","PhotoPageContainer_PhotoPageContainer","Logo","logo","PlatformLinkContainer","href","rel","Dropdown","listOpen","headerTitle","close","removeEventListener","timeOut","prevState","_this3","list","_this$state","toggleList","stopPropagation","jsx","showsList","react_router_dom","to","exact","activeClassName","App","Logo_Logo","Dropdown_Dropdown","react_router","path","component","PlatformLinkContainer_PlatformLinkContainer","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93ddee5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ec50eb0e.png\";","import React from 'react';\n\nimport DBConstants from '../data/DBConstants.json';\nimport APIConstants from '../data/APIConstants.json'\n\n// Cache\nlet dataCache = {};\n\nexport const fetchPhotoArchives = (handleFetchedPhotos) => {\n    if (dataCache[DBConstants.PHOTOS] !== undefined) {\n        handleFetchedPhotos(dataCache[DBConstants.PHOTOS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildPhotosUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let photoData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let photos = photoData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.PHOTOS]\n                    dataCache[DBConstants.PHOTOS] = photos;\n\n                    handleFetchedPhotos(photos);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n\n    }\n}\n\nexport const fetchHipDadDjs = (handleFetchedDjs) => {\n    if (dataCache[DBConstants.DJS] !== undefined) {\n        handleFetchedDjs(dataCache[DBConstants.DJS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildDjsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let djsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let djs = djsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.DJS]\n                    dataCache[DBConstants.DJS] = djs;\n\n                    handleFetchedDjs(djs);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\nexport const fetchHipDadNews = (handleFetchedNews) => {\n    if (dataCache[DBConstants.NEWS] !== undefined) {\n        handleFetchedNews(dataCache[DBConstants.NEWS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildNewsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let newsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let news = newsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.NEWS] = news;\n\n                    handleFetchedNews(news);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that fetches and handles videos to play from google sheets\n */\nexport const checkForScheduledShow = (playScheduledProgramming, handleFetchingPlaylist) => {\n    if (dataCache[DBConstants.SCHEDULE] !== undefined) {\n        let videoToPlay = checkForVideoToPlay(dataCache[DBConstants.SCHEDULE]);\n\n        // If we have a video to play, lets call our callback function with the video's videoId and startTime\n        if (videoToPlay.shouldPlay) {\n            playScheduledProgramming(videoToPlay.videoId, videoToPlay.startTime);\n        } else if (handleFetchingPlaylist) {\n            handleFetchingPlaylist();\n        }\n    } else {\n        // Initiate the http request object\n        const Http = new XMLHttpRequest();\n\n        const url = buildScheduleURL();\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let scheduleData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let scheduledShows = scheduleData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.SCHEDULE] = scheduledShows;\n\n                    let videoToPlay = checkForVideoToPlay(scheduledShows);\n\n                    // If we have a video to play, lets call our callback function with the video's videoId and startTime\n                    if (videoToPlay.shouldPlay) {\n                        playScheduledProgramming(videoToPlay.videoId, videoToPlay.startTime);\n                    } else if (handleFetchingPlaylist) {\n                        handleFetchingPlaylist();\n                    }\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\nexport const fetchSchedule = (callback) => {\n    if (dataCache[DBConstants.SCHEDULE] !== undefined) {\n        callback(dataCache[DBConstants.SCHEDULE]);\n    } else {\n        // Initiate the http request object\n        const Http = new XMLHttpRequest();\n\n        const url = buildScheduleURL();\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let scheduleData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let scheduledShows = scheduleData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.SCHEDULE] = scheduledShows;\n                    callback(dataCache[DBConstants.SCHEDULE]);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that will build the URL that is hit to fetch scheduled show data\n */\nconst buildScheduleURL = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.schedule.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.schedule.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/*\n    Function that will build the URL that is hit to fetch the news\n */\nconst buildNewsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.news.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.news.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/*\n    Function that will build the URL that is hit to fetch the djs\n */\nconst buildDjsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.djs.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.djs.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\nconst buildPhotosUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.photos.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.photos.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/* \n    Function that will take the array of arrays of scheduled shows and convert it to an array of objects\n */\nexport const parseScheduleData = (scheduleData) => {\n    let shows = [];\n\n    // Iterate over the scheduleData and turn each array entry into an object\n    scheduleData.forEach(function (show) {\n        shows.push({\n            title: show[DBConstants.values.schedule.COLUMN_HEADERS.SHOW_TITLE],\n            videoId: show[DBConstants.values.schedule.COLUMN_HEADERS.VIDEO_ID],\n            startDate: Date.parse(show[DBConstants.values.schedule.COLUMN_HEADERS.START_DATE]),\n            endDate: Date.parse(show[DBConstants.values.schedule.COLUMN_HEADERS.END_DATE]),\n        });\n    });\n\n    return shows;\n}\n\nexport const parsePhotoData = (photoData) => {\n    let archives = [];\n\n    var i = 0;\n\n    while (i < photoData.length) {\n        let currentRow = photoData[i];\n\n        let album = {\n            title: currentRow[DBConstants.values.photos.COLUMN_HEADERS.TITLE],\n            author: currentRow[DBConstants.values.photos.COLUMN_HEADERS.AUTHOR],\n            description: currentRow[DBConstants.values.photos.COLUMN_HEADERS.ALBUM_DESC]\n        };\n\n        let photos = [];\n\n        photos.push({\n            imgSrc: currentRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_SRC],\n            desc: currentRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_DESC]\n        });\n\n        i++;\n\n        while (i < photoData.length && !photoData[i][DBConstants.values.photos.COLUMN_HEADERS.TITLE]) {\n            let photoRow = photoData[i]\n\n            photos.push({\n                imgSrc: photoRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_SRC],\n                desc: photoRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_DESC]\n            })\n\n            i++;\n        }\n\n        album.photos = photos;\n\n        archives.push(album);\n    }\n\n    return archives.reverse();\n}\n\nexport const parseNewsData = (newsData) => {\n    let news = [];\n\n    newsData.forEach(function (newsItem) {\n        news.push({\n            date: newsItem[DBConstants.values.news.COLUMN_HEADERS.DATE],\n            title: newsItem[DBConstants.values.news.COLUMN_HEADERS.TITLE],\n            text: newsItem[DBConstants.values.news.COLUMN_HEADERS.TEXT],\n            image: newsItem[DBConstants.values.news.COLUMN_HEADERS.IMAGE]\n        })\n    });\n\n    return news.reverse();\n}\n\nexport const parseDjs = (djsData) => {\n    let djs = [];\n\n    djsData.forEach(function (dj) {\n        djs.push({\n            name: dj[DBConstants.values.djs.COLUMN_HEADERS.NAME],\n            bio: dj[DBConstants.values.djs.COLUMN_HEADERS.BIO],\n            image: dj[DBConstants.values.djs.COLUMN_HEADERS.IMAGE],\n        })\n    });\n\n    return djs;\n}\n\nexport const formatTimeSpanString = (props) => {\n    let startDate = new Date(props.startDate);\n    let startDateString = startDate.toString();\n\n    let endDate = new Date(props.endDate);\n    let endDateString = endDate.toString();\n\n    startDateString = startDateString.substring(0, startDateString.indexOf('GMT'));\n\n    endDateString = endDateString.substring(16);\n\n    return (\n        <div>\n            {startDateString} - {endDateString}\n        </div>\n    );\n}\n\n/*\n    Function that will take in scheduleData retreived from google sheets and determine if a video should play\n */\nconst checkForVideoToPlay = (scheduledShows) => {\n    // Convert show data to array of objects\n    let showObjects = parseScheduleData(scheduledShows);\n\n    // Get current time so we know what time we should be looking for in the shows\n    let currentTime = Date.now();\n\n    // Placeholder of video to play\n    let videoToPlay = {\n        shouldPlay: false,\n    };\n\n    // Iterate over each show object to check if we should play it\n    showObjects.forEach(function (show) {\n        if (show.startDate < currentTime && show.endDate > currentTime) {\n            // It looks like we have a show that should play\n            let startTime = 0;\n\n            // Check to see if we're tuning in late!\n            if (currentTime - show.startDate > 60000) {\n                // If we are, adjust the startTime to where we should be\n                startTime = (currentTime - show.startDate) / 1000;\n            }\n\n            // Set videoToPlay to the video as an object with its' videoId and startTime\n            videoToPlay = {\n                shouldPlay: true,\n                videoId: show.videoId,\n                startTime: startTime\n            }\n        }\n    });\n\n    // If we have nothing to play\n    return videoToPlay;\n}","import React from 'react';\n\nexport class NewsContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"GrowingContainer\">\n                <img src={this.props.image} className=\"NewsImageContainer\" alt={this.props.title + \"_IMG\"} />\n                <div className=\"textContainer\">\n                    <h2>{this.props.title}</h2>\n                    <h4>{this.props.date}</h4>\n                    <p>{this.props.text}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { fetchHipDadNews, parseNewsData } from '../util/DBUtil';\nimport { NewsContainer } from './NewsContainer';\n\n/*\n    Container that holds the Home page\n */\nexport class HomeContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            news: [],\n            visableNews: []\n        }\n\n        this.handleFetchedNews = this.handleFetchedNews.bind(this);\n        this.handleNewerStories = this.handleNewerStories.bind(this);\n        this.handleOlderStories = this.handleOlderStories.bind(this);\n        this.updateVisibleEpisodes = this.updateVisibleEpisodes.bind(this);\n    }\n\n    handleFetchedNews(news) {\n        let parsedNews = parseNewsData(news);\n\n        this.setState({\n            news: parsedNews,\n            visableNews: parsedNews.slice(0, 10)\n        });\n    }\n\n    updateVisibleEpisodes(page) {\n        this.setState({\n            visableNews: this.state.news.slice(page * 10, page * 10 + 10),\n            page: page\n        });\n    }\n\n    handleOlderStories() {\n        setTimeout(this.scrollToTop(), 1000);\n        this.updateVisibleEpisodes(this.state.page + 1)\n    }\n\n    handleNewerStories() {\n        setTimeout(this.scrollToTop(), 1000);\n        this.updateVisibleEpisodes(this.state.page - 1)\n    }\n\n    scrollToTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    componentDidMount() {\n        fetchHipDadNews(this.handleFetchedNews);\n    }\n\n    render() {\n        const newerStoriesExist = this.state.page;\n        const olderStoriesExist = this.state.news.length > (this.state.page + 1) * 10;\n\n        return (\n            <div >\n                <h2>News</h2>\n                {this.state.visableNews.map(news => (\n                    <NewsContainer key={news.title} date={news.date} title={news.title} text={news.text} image={news.image} />\n                ))}\n                <br />\n                <button id=\"Newer News\" onClick={this.handleNewerStories} hidden={!newerStoriesExist}>Newer Stories</button>\n                <button id=\"Older News\" onClick={this.handleOlderStories} hidden={!olderStoriesExist}>Older Stories</button>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport YouTube from 'react-youtube';\n\n/*\n    Container that holds a YouTube video\n */\nexport const YouTubeVideoContainer = (props) => {\n    return (\n        <div>\n            <h3 className=\"textContainer\">{props.title}</h3>\n            <YouTube videoId={props.src} />\n            <p className=\"textContainer\">{props.description}</p>\n        </div>\n    )\n}","// We have several constants that we use throughout this file\nimport APIConstants from '../data/APIConstants.json';\n\n// Playlist cache\nlet playlistCache = {};\n\n/* \n    Function that will recursively fetch and populate an array of videoIds\n */\nexport const fetchPlaylistVideos = (playlistId, videoIds, nextPageToken, part, callback) => {\n    if (playlistCache[playlistId] !== undefined) {\n        // We already have the playlist cached so we don't need to make another call\n        callback(playlistCache[playlistId]);\n    } else {\n        // Initiate the http request object\n        let Http = new XMLHttpRequest();\n\n        // The tail of the request will include the playlist id as well as the API key\n        let requestTail = \"&playlistId=\" + playlistId + \"&key=\" + APIConstants.KEY;\n\n        // If we have been passed in a nextPageToken we will want to add that to the end of the requestTail as well\n        requestTail = nextPageToken ? requestTail + \"&pageToken=\" + nextPageToken : requestTail;\n\n        let url = 'https://www.googleapis.com/youtube/v3/playlistItems?part=' + part + '&maxResults=50' + requestTail;\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and append each item to the list of videoIds\n                    let playlistData = JSON.parse(Http.responseText);\n                    playlistData.items.forEach(function (item) {\n                        videoIds.push({\n                            videoId: item.contentDetails.videoId,\n                            title: item.snippet ? item.snippet.title : undefined,\n                            description: item.snippet ? item.snippet.description : undefined\n                        });\n                    });\n\n                    // If we have a nextPageToken in the response, that means there are more videos to fetch. \n                    if (playlistData.nextPageToken && playlistData.items.length < 199) {\n                        // That means that we will have to fetch more videos! \n                        fetchPlaylistVideos(playlistId, videoIds, playlistData.nextPageToken, part, callback);\n                    } else {\n                        // Assign the videoIds to the playlistCache\n                        playlistCache[playlistId] = videoIds;\n\n                        // Otherwise we have all the videos we need and can start the player\n                        callback(videoIds);\n                    }\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n","import React from 'react';\n\nimport { YouTubeVideoContainer } from './YouTubeVideoContainer';\nimport { fetchPlaylistVideos } from '../util/YouTubeUtil';\n\n/*\n    Container that holds a YouTube playlist\n */\nexport class YouTubePlaylistContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            episodes: [],\n            visableEpisodes: [],\n            page: 0\n        };\n\n        this.updateVisibleEpisodes = this.updateVisibleEpisodes.bind(this);\n        this.initialEpisodePopulation = this.initialEpisodePopulation.bind(this);\n        this.handleOlderEpisodes = this.handleOlderEpisodes.bind(this);\n        this.handleNewerEpisodes = this.handleNewerEpisodes.bind(this);\n    }\n\n    initialEpisodePopulation(episodes) {\n        this.setState({\n            episodes: episodes,\n            visableEpisodes: episodes.slice(0, 5)\n        })\n    }\n\n    updateVisibleEpisodes(page) {\n        this.setState({\n            visableEpisodes: this.state.episodes.slice(page * 5, page * 5 + 5),\n            page: page\n        });\n    }\n\n    handleOlderEpisodes() {\n        this.scrollToTop();\n        this.updateVisibleEpisodes(this.state.page + 1)\n    }\n\n    handleNewerEpisodes() {\n        this.scrollToTop();\n        this.updateVisibleEpisodes(this.state.page - 1)\n    }\n\n    scrollToTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    componentWillMount() {\n        fetchPlaylistVideos(this.props.playlistId, [], undefined, \"contentDetails,snippet\", this.initialEpisodePopulation)\n    }\n\n    render() {\n        // It will render a YouTubeVideoContainer for each episode in its' passed in props.episodes\n        const newerVideosExist = this.state.page;\n        const olderVideosExist = this.state.episodes.length > (this.state.page + 1) * 5;\n\n        return (\n            <div>\n                {this.state.visableEpisodes.map(episode => (\n                    <YouTubeVideoContainer key={episode.videoId} src={episode.videoId} title={episode.title} description={episode.description} />\n                ))}\n                <button id=\"Newer Episode\" onClick={this.handleNewerEpisodes} hidden={!newerVideosExist}>Newer Videos</button>\n                <button id=\"Older Episodes\" onClick={this.handleOlderEpisodes} hidden={!olderVideosExist}>Older Videos</button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { YouTubePlaylistContainer } from './YouTubePlaylistContainer';\n\n/*\n    Container that holds a Show page\n */\nexport class ShowContainer extends React.Component {\n    render() {\n        // Translate the filtered playlist data into YouTubePlaylistContainer components\n        return (\n            <>\n                <h2>{this.props.title} Archive</h2>\n                <div>\n                    <YouTubePlaylistContainer playlistId={this.props.playlistId} />\n                </div>\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport class DJ extends React.Component {\n    render() {\n        return (\n            <div className=\"GrowingContainer\">\n                <img src={this.props.image} className=\"NewsImageContainer\" alt={this.props.name + \"_IMG\"} />\n                <div className=\"DJContainer\">\n                    <h2>{this.props.name}</h2>\n                    <p>{this.props.bio}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { fetchHipDadDjs, parseDjs } from '../util/DBUtil';\nimport { DJ } from '../components/DJ';\n\nexport class DJContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            djs: []\n        }\n\n        this.handleFetchedDjs = this.handleFetchedDjs.bind(this);\n    }\n\n    handleFetchedDjs(djs) {\n        let parsedDjs = parseDjs(djs);\n\n        this.setState({\n            djs: parsedDjs\n        });\n    }\n\n    componentDidMount() {\n        fetchHipDadDjs(this.handleFetchedDjs);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Meet the DJs!</h3>\n                {this.state.djs.map(dj => (\n                    <DJ name={dj.name} bio={dj.bio} image={dj.image} key={dj.name} />\n                ))}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { DJContainer } from './DJContainer';\n\n/*\n    Container that holds the About page\n */\nexport class AboutContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>About Hip Dad Radio</h2>\n                <DJContainer />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { formatTimeSpanString } from '../util/DBUtil';\n\nexport class ScheduledProgramDescriptor extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.title}<br/>\n                {formatTimeSpanString(this.props)}<br/>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { fetchSchedule, parseScheduleData } from '../util/DBUtil';\nimport { ScheduledProgramDescriptor } from '../components/ScheduledProgramDescriptor';\n\nexport class ScheduleContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            schedule: [],\n            upcomingShows: false\n        }\n\n        this.populateSchedule = this.populateSchedule.bind(this);\n    }\n\n    componentWillMount() {\n        fetchSchedule(this.populateSchedule);\n    }\n\n    populateSchedule(schedule) {\n        let scheduleData = parseScheduleData(schedule);\n\n        scheduleData = this.filterSchedule(scheduleData);\n\n        if (scheduleData.length > 0) {\n            this.setState({\n                schedule: scheduleData,\n                upcomingShows: true\n            });\n        }\n    }\n\n    filterSchedule(oldSchedule) {\n        let scheduleData = [];\n        const now = Date.now();\n        oldSchedule.forEach(show => {\n            let timeDif = show.endDate - now;\n            if (0 < timeDif && timeDif < 86400000) {\n                scheduleData.push(show);\n            }\n        });\n\n        return scheduleData;\n    }\n\n    render() {\n        return (\n            <h4 className=\"textContainer\">\n                <strong>\n                    Scheduled shows:\n                </strong>\n                <br />\n                {!this.state.upcomingShows ? 'No upcoming shows scheduled... Please check back tomorrow!' : ''}\n                {this.state.schedule.map(schedule => (\n                    <ScheduledProgramDescriptor title={schedule.title} startDate={schedule.startDate} endDate={schedule.endDate} key={schedule.title + schedule.startDate} />\n                ))}\n            </h4>\n        )\n    }\n}","import React from 'react';\nimport YouTube from 'react-youtube';\n\nexport class YouTubePlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            opts: {\n                height: '360',\n                width: '640',\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: false\n        };\n\n        this.goBigScreen = this.goBigScreen.bind(this);\n        this.goSmallScreen = this.goSmallScreen.bind(this);\n    }\n\n    goBigScreen() {\n        this.setState({\n            opts: {\n                height: window.innerHeight - 100,\n                width: window.innerWidth - 100,\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: true\n        });\n    }\n\n    goSmallScreen() {\n        this.setState({\n            opts: {\n                height: '360',\n                width: '640',\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: false\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div hidden={!this.props.visible} className=\"noInteraction\">\n                    <YouTube opts={this.state.opts} onReady={this.props.onInitialize} onStateChange={this.props.onStateChange} />\n                </div>\n                <div hidden={!this.props.visible}>\n                    <button onClick={this.goSmallScreen} hidden={!this.state.isBig}>Go Small</button>\n                    <button onClick={this.goBigScreen} hidden={this.state.isBig}>Go Big</button>\n                </div>\n            </>\n        )\n    }\n}","import React from 'react';\n\nconst Twitch = window.Twitch;\n\nexport class TwitchPlayer extends React.Component {\n    componentDidMount() {\n        this.props.onInitialize(new Twitch.Player(\"TwitchPlayer\", { channel: \"hipdadradio\" }));\n    }\n    render() {\n        return (\n            <>\n                <div id=\"TwitchPlayer\" className=\"noInteraction\" hidden={!this.props.visible} />\n                <div dangerouslySetInnerHTML={{ __html: `<iframe id=\"hipdadradio\" src=\"https://www.twitch.tv/embed/hipdadradio/chat\" scrolling=\"yes\" height=\"300\" width=\"640\"></iframe>` }} hidden={!this.props.visible} />\n            </>\n        );\n    }\n}","/*\n    Shuffle helper function randomly reorders an array and returns it\n */\nexport const shuffle = (array) => {\n   for (let i = array.length - 1; i > 0; i--) {\n       const j = Math.floor(Math.random() * (i + 1));\n       [array[i], array[j]] = [array[j], array[i]];\n   }\n   return array;\n}","import React from 'react';\n\nexport const VideoHeader = (props) => {\n    return (\n        <h4 className=\"textContainer\">\n            <strong>\n                You're Listening to HDR <br />\n                Now Playing: {props.videoTitle} <br />\n                Number of Listeners: {props.numberOfListeners} <br />\n            </strong>\n        </h4>\n    )\n}","import React from 'react';\n\nimport { ScheduleContainer } from '../containers/ScheduleContainer';\nimport { YouTubePlayer } from '../components/YouTubePlayer';\nimport { TwitchPlayer } from '../components/TwitchPlayer';\nimport { checkForScheduledShow } from '../util/DBUtil';\nimport { fetchPlaylistVideos } from '../util/YouTubeUtil';\nimport { shuffle } from '../util/DataUtil';\nimport { VideoHeader } from './VideoHeader';\n\nimport PlayerConstants from '../data/PlayerConstants.json';\nimport YTConstants from '../data/YTConstants.json';\n\nconst Twitch = window.Twitch;\n\n// The playlist ID we use to populate a player\nconst PLAYLIST_ID = YTConstants.PLAYLIST_ID\n\n// Variable to keep track of how many seconds the player has waited to start\nlet unstartedSeconds = 0;\n\n\n/*\n    Container that holds the Player page\n */\nexport class Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePlayer: \"\",\n            playing: \"\",\n            videoTitle: \"...\",\n            numberOfListeners: Math.round(Math.random() * 100),\n            twitchPlayer: undefined,\n            youTubePlayer: undefined\n        };\n\n        this.bindTwitchPlayer = this.bindTwitchPlayer.bind(this);\n        this.bindYouTubePlayer = this.bindYouTubePlayer.bind(this);\n        this.showTwitch = this.showTwitch.bind(this);\n        this.hideTwitch = this.hideTwitch.bind(this);\n        this.startYouTubePlayerRunner = this.startYouTubePlayerRunner.bind(this);\n        this.startBlockedYouTubeVideoChecker = this.startBlockedYouTubeVideoChecker.bind(this);\n        this.handleFetchingPlaylist = this.handleFetchingPlaylist.bind(this);\n        this.startYouTubePlayer = this.startYouTubePlayer.bind(this);\n        this.playScheduledProgramming = this.playScheduledProgramming.bind(this);\n        this.handleYouTubeStateChange = this.handleYouTubeStateChange.bind(this);\n    }\n\n    bindTwitchPlayer(twitchPlayer) {\n        // Add twitch event listeners here\n        this.setState({ twitchPlayer });\n\n        twitchPlayer.addEventListener(Twitch.Player.PLAYING, this.showTwitch);\n        twitchPlayer.addEventListener(Twitch.Player.OFFLINE, this.hideTwitch);\n    }\n\n    showTwitch() {\n        this.setState({ volume: this.state.youTubePlayer.getVolume() });\n\n        let fadeOutId = setInterval(function (self) {\n            if (self.state.volume > 0) {\n                let newVolume = self.state.volume - 5;\n                self.state.youTubePlayer.setVolume(newVolume);\n                self.setState({ volume: newVolume });\n            }\n        }, 250, this);\n\n        setTimeout(function (self) {\n            clearInterval(fadeOutId);\n\n            self.setState({\n                activePlayer: PlayerConstants.TWITCH,\n                videoTitle: \"Hip Dad Radio: LIVE\"\n            });\n\n            if (self.state.youTubePlayer) {\n                self.state.youTubePlayer.pauseVideo();\n            }\n        }, 5000, this);\n    }\n\n    hideTwitch() {\n        this.setState({\n            activePlayer: PlayerConstants.YOUTUBE,\n            volume: this.state.youTubePlayer ? this.state.youTubePlayer.getVolume() : 100\n        });\n\n        if (this.state.youTubePlayer) {\n            this.state.youTubePlayer.playVideo();\n        }\n\n        if (this.state.volume < 100) {\n            this.setState({});\n\n            let fadeInId = setInterval(function (self) {\n                if (self.state.volume < 100) {\n                    let newVolume = self.state.volume + 5;\n                    self.state.youTubePlayer.setVolume(newVolume);\n                    self.setState({ volume: newVolume });\n                }\n            }, 250, this);\n\n            setTimeout(function (self) {\n                clearInterval(fadeInId);\n            }, 5000, this)\n        }\n    }\n\n    bindYouTubePlayer(event) {\n        this.setState({ youTubePlayer: event.target });\n\n        // Check for scheduled programming\n        checkForScheduledShow(this.playScheduledProgramming, this.handleFetchingPlaylist);\n\n        // Start the player runner\n        this.startYouTubePlayerRunner();\n\n        // Start the blocked video checker\n        this.startBlockedYouTubeVideoChecker();\n    }\n\n    /*\n        Function that will start a runner that checks the youtube player state every second\n        Handles state appropriately\n    */\n    startYouTubePlayerRunner() {\n        setInterval(function (self) {\n            if (self.state.playing === PlayerConstants.HDR) {\n                // If HDR is playing we want to check for programming\n                checkForScheduledShow(self.playScheduledProgramming);\n            } else if (self.state.playing === PlayerConstants.PROGRAMMING) {\n                // If programming is already playing we don't really care\n                return;\n            }\n        }, 60000, this);\n    }\n\n    /*\n        Function that will check every second to see if a video playing is blocked and should be skipped\n    */\n    startBlockedYouTubeVideoChecker() {\n        setInterval(\n            function (self) {\n                self.setState({ numberOfListeners: self.state.numberOfListeners + (Math.round(Math.random() * 2 - 1)) })\n\n                // If we're playing the playlist check the state of the player\n                if (self.state.playing === PlayerConstants.HDR) {\n                    // If we've been waiting over 2 seconds, skip the video\n                    if (unstartedSeconds > 2) {\n                        // Play the next video and reset the count\n                        self.state.youTubePlayer.nextVideo();\n                        unstartedSeconds = 0;\n                    } else if (self.state.youTubePlayer.getPlayerState() === YTConstants.UNSTARTED) {\n                        // Increment the number of seconds we've been waiting\n                        unstartedSeconds += 1;\n                    } else {\n                        unstartedSeconds = 0;\n                    }\n                }\n            }, 1000, this);\n    }\n\n    /* \n        Helper function that calls fetchPlaylistVideos with all necessary parameters\n     */\n    handleFetchingPlaylist() {\n        // Fetch the playlist videos\n        fetchPlaylistVideos(PLAYLIST_ID, [], undefined, \"contentDetails\", this.startYouTubePlayer);\n    }\n\n    /*\n        Function that will play a scheduled program and update the state of the player\n     */\n    playScheduledProgramming(videoID, startTime) {\n        // Load the video into the player and play it\n        this.state.youTubePlayer.loadVideoById(videoID, startTime);\n        this.state.youTubePlayer.playVideo();\n\n        // Update the currentlyPlaying variable to signal that we're playing scheduled programming\n        this.setState({\n            playing: PlayerConstants.PROGRAMMING,\n            activePlayer: PlayerConstants.YOUTUBE\n        });\n    }\n\n    /* \n        Function that loads a passed in array of videoIds and starts the player\n    */\n    startYouTubePlayer(videos) {\n        videos = videos.map(video => video.videoId)\n\n        this.state.youTubePlayer.loadPlaylist({\n            playlist: shuffle(videos)\n        });\n\n        if (this.state.activePlayer === PlayerConstants.YOUTUBE) {\n            this.state.youTubePlayer.playVideo();\n            this.setState({ playing: PlayerConstants.HDR });\n        }\n    }\n\n    handleYouTubeStateChange(event) {\n        switch (event.data) {\n            case YTConstants.PLAYING:\n                this.setState({\n                    'videoTitle': this.state.youTubePlayer.getVideoData().title,\n                });\n                break;\n            default:\n                break;\n        }\n        // If we're playing scheduled programming\n        if (this.state.playing === PlayerConstants.PROGRAMMING) {\n            // If the programming has ended, we want to checkForScheduledShow again \n            // in case there's something else we should play\n            switch (event.data) {\n                case YTConstants.ENDED:\n                    checkForScheduledShow(this.playScheduledProgramming, this.handleFetchingPlaylist);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <VideoHeader videoTitle={this.state.videoTitle} numberOfListeners={this.state.numberOfListeners} />\n                <YouTubePlayer onInitialize={this.bindYouTubePlayer} onStateChange={this.handleYouTubeStateChange} visible={this.state.activePlayer === PlayerConstants.YOUTUBE && this.state.youTubePlayer} />\n                <TwitchPlayer onInitialize={this.bindTwitchPlayer} visible={this.state.activePlayer === PlayerConstants.TWITCH && this.state.twitchPlayer} />\n                <ScheduleContainer />\n            </>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Player } from '../components/Player';\n\n/*\n    Container that holds the Player\n */\nexport class PlayerContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <Player />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.1059772933';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLScIj6qyeZSeUX62cCstOZSuVTQIXMjR-ci7J9NSArSuoCWbVQ/formResponse';\n\nexport class MailingListFormContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            value: '',\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.value);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We now have your email address and will sell it to anyone who wants to buy it.\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            value: ''\n        });\n        document.getElementById('mailingListEmail').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\" >\n                <h2>Join Our Mailing List!<button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Looking for more?</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Join our mailing list for updates on all things Hip Dad Radio!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"mailingListEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"mailingListEmail\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} /> <br />\n                        </p>\n                    </section>\n                    <button id=\"MailingListSubmit\" type='submit' hidden={!this.state.value}>Get Those Updates!</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_FIRST_NAME_ID = 'entry.984192258';\nconst GOOGLE_FORM_LAST_NAME_ID = 'entry.327263638';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.1665212900';\nconst GOOGLE_FORM_WHY_ID = 'entry.643621519';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLSf-NgZa7cYLvzydCIHJLzMvSR5WrPG-08c9rm70aYZwh5R_dg/formResponse';\n\nexport class DJApplicationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            why: ''\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleWhyChange = this.handleWhyChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleFirstNameChange(event) {\n        this.setState({ firstName: event.target.value });\n    }\n\n    handleLastNameChange(event) {\n        this.setState({ lastName: event.target.value });\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    handleWhyChange(event) {\n        this.setState({ why: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_FIRST_NAME_ID, this.state.firstName);\n        formData.append(GOOGLE_FORM_LAST_NAME_ID, this.state.lastName);\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\n        formData.append(GOOGLE_FORM_WHY_ID, this.state.why);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We will reach out to you to see what DJ oportunities are available.\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            why: ''\n        });\n        document.getElementById('applicationFirstName').value = '';\n        document.getElementById('applicationLastName').value = '';\n        document.getElementById('applicationEmail').value = '';\n        document.getElementById('applicationWhy').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\" >\n                <h2>Be a Hip Dad DJ!<button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Tell us who you are</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Want to be a Hip Dad Radio DJ? Tell us why!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"applicationFirstName\">\n                                <span>First Name: </span>\n                            </label>\n                            <input id=\"applicationFirstName\" name=\"firstName\" value={this.state.firstName} onChange={this.handleFirstNameChange} />\n                        </p>\n                        <p hidden={!this.state.firstName}>\n                            <label htmlFor=\"applicationLastName\">\n                                <span>Last Name: </span>\n                            </label>\n                            <input id=\"applicationLastName\" name=\"lastName\" value={this.state.lastName} onChange={this.handleLastNameChange} />\n                        </p>\n                        <p hidden={!(this.state.lastName && this.state.firstName)}>\n                            <label htmlFor=\"applicationEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"applicationEmail\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\n                        </p>\n                        <p hidden={!(this.state.email && this.state.lastName && this.state.firstName)}>\n                            <label htmlFor=\"applicationWhy\">\n                                <span>Why HDR: </span>\n                            </label>\n                            <textarea id=\"applicationWhy\" name=\"why\" value={this.state.why} onChange={this.handleWhyChange} rows=\"3\" cols=\"60\" />\n                        </p>\n                    </section>\n                    <button id=\"SubmitButton\" type='submit' hidden={!(this.state.why && this.state.email && this.state.lastName && this.state.firstName)}>Welcome, DJ {this.state.firstName}</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_BAND_NAME_ID = 'entry.267308415';\nconst GOOGLE_FORM_NAME_ID = 'entry.1428062257';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.2009621913';\nconst GOOGLE_FORM_WEBSITE_ID = 'entry.1224946671';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLSfkAY3wK8ORxS4DS2XUu5ch5Xpu6UljrBcuzWVkOW76OWXvyg/formResponse';\n\nexport class ArtistApplicationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            bandName: '',\n            name: '',\n            email: '',\n            website: ''\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleBandNameChange = this.handleBandNameChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleWebsiteChange = this.handleWebsiteChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleBandNameChange(event) {\n        this.setState({ bandName: event.target.value });\n    }\n\n    handleNameChange(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    handleWebsiteChange(event) {\n        this.setState({ website: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_BAND_NAME_ID, this.state.bandName);\n        formData.append(GOOGLE_FORM_NAME_ID, this.state.name);\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\n        formData.append(GOOGLE_FORM_WEBSITE_ID, this.state.website);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We will reach out to you to see what we can make happen!\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            bandName: '',\n            name: '',\n            email: '',\n            website: ''\n        });\n        document.getElementById('artistBandName').value = '';\n        document.getElementById('artistName').value = '';\n        document.getElementById('artistEmail').value = '';\n        document.getElementById('artistWebsite').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\" >\n                <h2>Do a Live Session on Hip Dad Radio! <button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Tell us about your Band</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Are you a muscian and want to perform LIVE on Hip Dad Radio? We'd love to have you on!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"artistBandName\">\n                                <span>Band Name: </span>\n                            </label>\n                            <input id=\"artistBandName\" name=\"bandName\" value={this.state.bandName} onChange={this.handleBandNameChange} />\n                        </p>\n                        <p hidden={!this.state.bandName}>\n                            <label htmlFor=\"artistName\">\n                                <span>Your Name: </span>\n                            </label>\n                            <input id=\"artistName\" name=\"name\" value={this.state.name} onChange={this.handleNameChange} />\n                        </p>\n                        <p hidden={!(this.state.name && this.state.bandName)}>\n                            <label htmlFor=\"artistEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"artistEmail\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\n                        </p>\n                        <p hidden={!(this.state.email && this.state.name && this.state.bandName)}>\n                            <label htmlFor=\"artistWebsite\">\n                                <span>Bandcamp: </span>\n                            </label>\n                            <input id=\"artistWebsite\" name=\"website\" value={this.state.website} onChange={this.handleWebsiteChange} />\n                        </p>\n                    </section>\n                    <button id=\"SubmitButton\" type='submit' hidden={!(this.state.website && this.state.email && this.state.name && this.state.bandName)}>Get {this.state.bandName} on HDR!</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { MailingListFormContainer } from './MailingListFormContainer';\nimport { DJApplicationContainer } from './DJApplicationContainer';\nimport { ArtistApplicationContainer } from './ArtistApplicationContainer';\n\nexport class ContactContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <MailingListFormContainer />\n                <DJApplicationContainer />\n                <ArtistApplicationContainer />\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport class PhotoArchiveListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleClick({\n            title: this.props.title,\n            author: this.props.author,\n            description: this.props.description,\n            photos: this.props.photos\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\">\n                <button onClick={this.handleClick}>\n                    <h3>{this.props.title}</h3>\n                    <h4>{this.props.author}</h4>\n                    <img className=\"photoArchiveCoverImg\" src={this.props.imgSrc} alt={this.props.title} />\n                    <p>{this.props.description}</p>\n                </button>\n                <br />\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\n\nexport class PhotoArchivePhoto extends React.Component {\n    render() {\n        return (\n            <div className=\"imageArchiveContainer\">\n                <img className=\"photoArchiveImg\" src={this.props.imgSrc} alt={this.props.imgSrc} />\n                <p>{this.props.desc}</p>\n                <br />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport class BackToArchiveButton extends React.Component {\n    render() {\n        return (\n            <button onClick={this.props.handleClick} style={{ float: \"right\" }}>Back to Archives</button>\n        )\n    }\n}","import React from 'react';\n\nimport { PhotoArchiveListItem } from '../components/PhotoArchiveListItem'\nimport { PhotoArchivePhoto } from '../components/PhotoArchivePhoto';\nimport { fetchPhotoArchives, parsePhotoData } from '../util/DBUtil';\nimport { BackToArchiveButton } from '../components/BackToArchiveButton';\n\nexport class PhotoPageContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            archives: [],\n            selected: {\n                photos: []\n            },\n            albumSelected: false\n        }\n\n        this.handleFetchedPhotos = this.handleFetchedPhotos.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.unSelect = this.unSelect.bind(this);\n        this.scrollToTop = this.scrollToTop.bind(this);\n    }\n\n    handleFetchedPhotos(photoData) {\n        let archives = parsePhotoData(photoData);\n\n        this.setState({ archives });\n    }\n\n    componentDidMount() {\n        fetchPhotoArchives(this.handleFetchedPhotos);\n    }\n\n    scrollToTop() {\n        document.getElementById('top').scrollIntoView({\n            behavior: 'smooth',\n            alignToTop: true\n        });\n    }\n\n    handleSelection(selected) {\n        this.scrollToTop();\n        setTimeout((self) => {\n            self.setState({\n                selected: selected,\n                albumSelected: true\n            });\n        }, 500, this);\n    }\n\n    unSelect() {\n        this.scrollToTop();\n        setTimeout((self) => {\n            self.setState({\n                selected: { photos: [] },\n                albumSelected: false\n            });\n        }, 500, this);\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Photo Archive</h2>\n                <div hidden={this.state.albumSelected}>\n                    {this.state.archives.map(archive => (\n                        <PhotoArchiveListItem key={archive.title} imgSrc={archive.photos[0].imgSrc} title={archive.title} description={archive.description} author={archive.author} handleClick={this.handleSelection} photos={archive.photos} />\n                    ))}\n                </div>\n                <div hidden={!this.state.albumSelected} className=\"imageArchiveContainer\">\n                    <BackToArchiveButton handleClick={this.unSelect} />\n                    <h3>{this.state.selected.title}</h3>\n                    <h4>{this.state.selected.author}</h4>\n                    {this.state.selected.photos.map(photo => (\n                        <PhotoArchivePhoto imgSrc={photo.imgSrc} desc={photo.desc} />\n                    ))}\n                    <BackToArchiveButton handleClick={this.unSelect} />\n                </div>\n            </>\n        );\n    }\n}\n\n\n\n","import React from 'react';\n\nimport { HomeContainer } from './containers/HomeContainer';\nimport { ShowContainer } from './containers/ShowContainer';\nimport { AboutContainer } from './containers/AboutContainer';\nimport { PlayerContainer } from './containers/PlayerContainer';\nimport { ContactContainer } from './containers/ContactContainer';\nimport { PhotoPageContainer } from './containers/PhotoPageContainer';\n\nimport YTConstants from './data/YTConstants.json';\n\n// Home page\nexport const Index = () => {\n  return <HomeContainer />;\n}\n\n// About Page\nexport const About = () => {\n  return <AboutContainer />;\n}\n\nexport const Listen = () => {\n  return <PlayerContainer />;\n}\n\n// Hdr Newshour route\nexport const HdrNewshour = () => {\n  return <ShowContainer playlistId={YTConstants.HDR_ID} title=\"HDR Newshour\" />;\n}\n\n// Hot Sandwich route\nexport const HotSandwich = () => {\n  return <ShowContainer playlistId={YTConstants.HOT_SANDWICH_ID} title=\"Hot Sandwich\" />;\n}\n\nexport const HipDadAds = () => {\n  return <ShowContainer playlistId={YTConstants.HIP_DAD_ADS_ID} title=\"Hip Dad Ads\" />\n}\n\nexport const ContactUs = () => {\n  return <ContactContainer title=\"Contact Us\" />\n}\n\nexport const Photos = () => {\n  return <PhotoPageContainer />\n}","import React from 'react';\n\nimport logo from '../img/logo.png'\n\nexport const Logo = () => {\n    return <img src={logo} alt=\"Logo\" className=\"Logo\"/>\n}","import React from 'react';\n\nexport class PlatformLinkContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <h3>Check us out on our platforms.</h3>\n                <p>\n                    <a className=\"ImageLinks\" href=\"https://www.instagram.com/hipdadradio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"LogoImageContainer\" src=\"http://www.transparentpng.com/thumb/logo-instagram/eerDTf-logo-instagram-clipart-transparent.png\" alt=\"instagramLogo\" /></a>\n                    <a className=\"ImageLinks\" href=\"https://www.youtube.com/channel/UCfdin8x2dLREvJ5M-qAYU3A\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"LogoImageContainer\" src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c545.png\" alt=\"youtubeLogo\" /></a>\n                </p>\n            </>\n        );\n    }\n}","import React from 'react'\n\nexport class Dropdown extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            listOpen: false,\n            headerTitle: this.props.title\n        }\n        this.close = this.close.bind(this)\n    }\n\n    componentDidUpdate() {\n        const { listOpen } = this.state\n        setTimeout(() => {\n            if (listOpen) {\n                window.addEventListener('click', this.close)\n            }\n            else {\n                window.removeEventListener('click', this.close)\n            }\n        }, 0)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.close)\n    }\n\n    close(timeOut) {\n        this.setState({\n            listOpen: false\n        })\n    }\n\n    toggleList() {\n        this.setState(prevState => ({\n            listOpen: !prevState.listOpen\n        }))\n    }\n\n    render() {\n        const { list } = this.props\n        const { listOpen, headerTitle } = this.state\n        return (\n            <div className=\"dd-wrapper\">\n                <div className=\"dd-header\" onClick={() => this.toggleList()}>\n                    <div className=\"dd-header-title\">{headerTitle}</div>\n                </div>\n                {listOpen && <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n                    {list.map((item) => (\n                        <>{item.jsx}</>\n                    ))}\n                </ul>}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\nimport { Index, About, HdrNewshour, HotSandwich, HipDadAds, Listen, ContactUs, Photos } from './AppRouter';\nimport { Logo } from './components/Logo';\nimport { PlatformLinkContainer } from './containers/PlatformLinkContainer';\nimport { Dropdown } from './components/Dropdown';\n\nconst showsList = [\n  {\n    id: 0,\n    title: 'HDR Newshour',\n    selected: false,\n    jsx: <NavLink to=\"/hdrnewshour/\" exact activeClassName=\"active\">HDR Newshour</NavLink>\n  },\n  {\n    id: 1,\n    title: 'Hot Sandwich',\n    selected: false,\n    jsx: <NavLink to=\"/hotsandwich/\" exact activeClassName=\"active\">Hot Sandwich</NavLink>\n  },\n  {\n    id: 2,\n    title: \"Hip Dad Ads\",\n    selected: false,\n    jsx: <NavLink to=\"/hipdadads/\" exact activeClassName=\"active\">Hip Dad Ads</NavLink>\n  }\n]\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"Header\" id=\"top\">\n          <Logo />\n          <h1>Welcome to Hip Dad Radio!!</h1>\n          <Logo />\n        </header>\n        <nav>\n          <ul>\n            <NavLink to=\"/\" exact activeClassName=\"active\">Home</NavLink>\n            <NavLink to=\"/about/\" exact activeClassName=\"active\">About</NavLink>\n            <NavLink to=\"/listen/\" exact activeClassName=\"active\">Listen</NavLink>\n            <NavLink to=\"/contact/\" exact activeClassName=\"active\">Contact Us</NavLink>\n            <NavLink to=\"/photos/\" exact activeClassName=\"actibe\">Photos</NavLink>\n            <Dropdown title=\"Shows\" list={showsList} />\n          </ul>\n        </nav>\n        <Switch className=\"primary-content\">\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/about/\" component={About} />\n          <Route path=\"/listen/\" component={Listen} />\n          <Route path=\"/hdrnewshour/\" component={HdrNewshour} />\n          <Route path=\"/hotsandwich/\" component={HotSandwich} />\n          <Route path=\"/hipdadads/\" component={HipDadAds} />\n          <Route path=\"/contact/\" component={ContactUs} />\n          <Route path=\"/photos/\" component={Photos} />\n        </Switch>\n        <footer>\n          <PlatformLinkContainer />\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}