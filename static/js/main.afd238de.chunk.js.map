{"version":3,"sources":["img/logo.png","util/DBUtil.js","containers/NewsContainer.js","util/AppUtil.js","containers/NewsPageContainer.js","components/DJ.js","containers/DJContainer.js","containers/AboutContainer.js","containers/HomeContainer.js","components/ScheduledProgramDescriptor.js","containers/ScheduleContainer.js","components/YouTubePlayer.js","components/TwitchPlayer.js","util/YouTubeUtil.js","util/DataUtil.js","components/VideoHeader.js","components/Player.js","containers/PlayerContainer.js","containers/MailingListFormContainer.js","containers/DJApplicationContainer.js","containers/ArtistApplicationContainer.js","containers/ContactContainer.js","components/PhotoArchiveListItem.js","components/PhotoArchivePhoto.js","components/BackToArchiveButton.js","containers/PhotoPageContainer.js","containers/YouTubeVideoContainer.js","containers/YouTubePlaylistContainer.js","containers/ShowContainer.js","components/ShowButton.js","pages/ShowsPage.js","AppRouter.js","components/Logo.js","containers/PlatformLinkContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dataCache","buildShowsUrl","url","DBConstants","URL_ROOT","values","shows","DB_ID","DB_VALUES","APIConstants","KEY","buildPhotosUrl","photos","buildDjsUrl","djs","buildNewsUrl","news","checkForScheduledShow","playScheduledProgramming","handleFetchingPlaylist","undefined","SCHEDULE","videoToPlay","checkForVideoToPlay","shouldPlay","videoId","startTime","Http","XMLHttpRequest","buildScheduleURL","onload","e","readyState","status","scheduledShows","JSON","parse","responseText","splice","console","error","statusText","open","send","schedule","parseScheduleData","scheduleData","forEach","show","push","title","COLUMN_HEADERS","SHOW_TITLE","VIDEO_ID","startDate","Date","START_DATE","endDate","END_DATE","showObjects","currentTime","now","NewsContainer","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","props","image","alt","date","text","React","Component","scrollToTop","window","scroll","top","left","behavior","NewsPageContainer","_this","call","state","page","visableNews","handleFetchedNews","bind","assertThisInitialized","handleNewerStories","handleOlderStories","updateVisibleEpisodes","parsedNews","newsData","newsItem","DATE","TITLE","TEXT","IMAGE","reverse","parseNewsData","setState","slice","setTimeout","self","NEWS","fetchHipDadNews","newerStoriesExist","olderStoriesExist","length","map","NewsContainer_NewsContainer","id","onClick","hidden","DJ","name","bio","DJContainer","handleFetchedDjs","parsedDjs","djsData","dj","NAME","BIO","parseDjs","DJS","fetchHipDadDjs","DJ_DJ","AboutContainer","DJContainer_DJContainer","HomeContainer","Fragment","AboutContainer_AboutContainer","ScheduledProgramDescriptor","startDateString","toString","endDateString","substring","indexOf","formatTimeSpanString","ScheduleContainer","upcomingShows","populateSchedule","callback","fetchSchedule","filterSchedule","oldSchedule","timeDif","ScheduledProgramDescriptor_ScheduledProgramDescriptor","YouTubePlayer","opts","height","width","playerVars","controls","isBig","goBigScreen","goSmallScreen","innerHeight","innerWidth","visible","YouTube","onReady","onInitialize","onStateChange","Twitch","TwitchPlayer","Player","channel","dangerouslySetInnerHTML","__html","playlistCache","fetchPlaylistVideos","playlistId","videoIds","nextPageToken","part","requestTail","playlistData","items","item","contentDetails","snippet","description","shuffle","array","i","j","Math","floor","random","_ref","VideoHeader","videoTitle","numberOfListeners","PLAYLIST_ID","YTConstants","unstartedSeconds","activePlayer","playing","round","twitchPlayer","youTubePlayer","bindTwitchPlayer","bindYouTubePlayer","showTwitch","hideTwitch","startYouTubePlayerRunner","startBlockedYouTubeVideoChecker","startYouTubePlayer","handleYouTubeStateChange","addEventListener","PLAYING","OFFLINE","volume","getVolume","fadeOutId","setInterval","newVolume","setVolume","clearInterval","PlayerConstants","TWITCH","pauseVideo","YOUTUBE","playVideo","fadeInId","event","target","HDR","PROGRAMMING","nextVideo","getPlayerState","UNSTARTED","videoID","loadVideoById","videos","video","loadPlaylist","playlist","data","getVideoData","ENDED","VideoHeader_VideoHeader","YouTubePlayer_YouTubePlayer","TwitchPlayer_TwitchPlayer","ScheduleContainer_ScheduleContainer","PlayerContainer","Player_Player","MailingListFormContainer","started","startForm","handleChange","handleSubmit","preventDefault","formData","FormData","append","alert","CORS_ROOT","document","getElementById","onSubmit","htmlFor","type","email","onChange","DJApplicationContainer","firstName","lastName","why","handleFirstNameChange","handleLastNameChange","handleEmailChange","handleWhyChange","rows","cols","ArtistApplicationContainer","bandName","website","handleBandNameChange","handleNameChange","handleWebsiteChange","ContactContainer","MailingListFormContainer_MailingListFormContainer","DJApplicationContainer_DJApplicationContainer","ArtistApplicationContainer_ArtistApplicationContainer","PhotoArchiveListItem","handleClick","author","imgSrc","PhotoArchivePhoto","desc","BackToArchiveButton","style","float","PhotoPageContainer","archives","selected","albumSelected","handleFetchedPhotos","handleSelection","unSelect","photoData","currentRow","album","AUTHOR","ALBUM_DESC","IMAGE_SRC","IMAGE_DESC","photoRow","parsePhotoData","PHOTOS","fetchPhotoArchives","_this2","archive","PhotoArchiveListItem_PhotoArchiveListItem","BackToArchiveButton_BackToArchiveButton","photo","PhotoArchivePhoto_PhotoArchivePhoto","YouTubeVideoContainer","YouTubePlaylistContainer","episodes","visableEpisodes","initialEpisodePopulation","handleOlderEpisodes","handleNewerEpisodes","newerVideosExist","olderVideosExist","episode","YouTubeVideoContainer_YouTubeVideoContainer","ShowContainer","backToShows","YouTubePlaylistContainer_YouTubePlaylistContainer","ShowButton","imagesrc","ShowsPage","showSelected","showList","handleFetchedShows","clearSelection","showData","DESCRIPTION","PLAYLIST","parseShows","SHOWS","fetchShowsList","showContainer","ShowContainer_ShowContainer","ShowButton_ShowButton","Home","HomeContainer_HomeContainer","News","NewsPageContainer_NewsPageContainer","Listen","PlayerContainer_PlayerContainer","ContactUs","ContactContainer_ContactContainer","Photos","PhotoPageContainer_PhotoPageContainer","Shows","ShowsPage_ShowsPage","Logo","logo","PlatformLinkContainer","href","rel","App","react_router_dom","Logo_Logo","to","exact","activeClassName","react_router","path","component","PlatformLinkContainer_PlatformLinkContainer","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.afd238de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ec50eb0e.png\";","import React from 'react';\n\nimport DBConstants from '../data/DBConstants.json';\nimport APIConstants from '../data/APIConstants.json'\n\n// Cache\nlet dataCache = {};\n\n// ##########################################################\n// SHOWS\n// ##########################################################\n\nexport const fetchShowsList = (handleFetchedShows) => {\n    if (dataCache[DBConstants.SHOWS] !== undefined) {\n        handleFetchedShows(dataCache[DBConstants.SHOWS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildShowsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let showsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let shows = showsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.PHOTOS]\n                    dataCache[DBConstants.SHOWS] = shows;\n\n                    handleFetchedShows(shows);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that will build the URL that is hit to fetch the shows\n */\nconst buildShowsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.shows.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.shows.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\nexport const parseShows = (showData) => {\n    let shows = [];\n\n    showData.forEach(function (show) {\n        shows.push({\n            title: show[DBConstants.values.shows.COLUMN_HEADERS.TITLE],\n            desc: show[DBConstants.values.shows.COLUMN_HEADERS.DESCRIPTION],\n            imagesrc: show[DBConstants.values.shows.COLUMN_HEADERS.IMAGE_SRC],\n            playlistId: show[DBConstants.values.shows.COLUMN_HEADERS.PLAYLIST]\n        })\n    });\n\n    return shows;\n}\n\n\n// ##########################################################\n// PHOTOS\n// ##########################################################\n\nexport const fetchPhotoArchives = (handleFetchedPhotos) => {\n    if (dataCache[DBConstants.PHOTOS] !== undefined) {\n        handleFetchedPhotos(dataCache[DBConstants.PHOTOS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildPhotosUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let photoData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let photos = photoData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.PHOTOS]\n                    dataCache[DBConstants.PHOTOS] = photos;\n\n                    handleFetchedPhotos(photos);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n\nconst buildPhotosUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.photos.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.photos.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\nexport const parsePhotoData = (photoData) => {\n    let archives = [];\n\n    var i = 0;\n\n    while (i < photoData.length) {\n        let currentRow = photoData[i];\n\n        let album = {\n            title: currentRow[DBConstants.values.photos.COLUMN_HEADERS.TITLE],\n            author: currentRow[DBConstants.values.photos.COLUMN_HEADERS.AUTHOR],\n            description: currentRow[DBConstants.values.photos.COLUMN_HEADERS.ALBUM_DESC]\n        };\n\n        let photos = [];\n\n        photos.push({\n            imgSrc: currentRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_SRC],\n            desc: currentRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_DESC]\n        });\n\n        i++;\n\n        while (i < photoData.length && !photoData[i][DBConstants.values.photos.COLUMN_HEADERS.TITLE]) {\n            let photoRow = photoData[i]\n\n            photos.push({\n                imgSrc: photoRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_SRC],\n                desc: photoRow[DBConstants.values.photos.COLUMN_HEADERS.IMAGE_DESC]\n            })\n\n            i++;\n        }\n\n        album.photos = photos;\n\n        archives.push(album);\n    }\n\n    return archives.reverse();\n}\n\n// ##########################################################\n// DJS\n// ##########################################################\n\nexport const fetchHipDadDjs = (handleFetchedDjs) => {\n    if (dataCache[DBConstants.DJS] !== undefined) {\n        handleFetchedDjs(dataCache[DBConstants.DJS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildDjsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let djsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let djs = djsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.DJS]\n                    dataCache[DBConstants.DJS] = djs;\n\n                    handleFetchedDjs(djs);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that will build the URL that is hit to fetch the djs\n */\nconst buildDjsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.djs.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.djs.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\nexport const parseDjs = (djsData) => {\n    let djs = [];\n\n    djsData.forEach(function (dj) {\n        djs.push({\n            name: dj[DBConstants.values.djs.COLUMN_HEADERS.NAME],\n            bio: dj[DBConstants.values.djs.COLUMN_HEADERS.BIO],\n            image: dj[DBConstants.values.djs.COLUMN_HEADERS.IMAGE],\n        })\n    });\n\n    return djs;\n}\n\n// ##########################################################\n// NEWS\n// ##########################################################\n\nexport const fetchHipDadNews = (handleFetchedNews) => {\n    if (dataCache[DBConstants.NEWS] !== undefined) {\n        handleFetchedNews(dataCache[DBConstants.NEWS]);\n    } else {\n        const Http = new XMLHttpRequest();\n\n        const url = buildNewsUrl();\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response\n                    let newsData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let news = newsData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.NEWS] = news;\n\n                    handleFetchedNews(news);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that will build the URL that is hit to fetch the news\n */\nconst buildNewsUrl = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.news.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.news.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\nexport const parseNewsData = (newsData) => {\n    let news = [];\n\n    newsData.forEach(function (newsItem) {\n        news.push({\n            date: newsItem[DBConstants.values.news.COLUMN_HEADERS.DATE],\n            title: newsItem[DBConstants.values.news.COLUMN_HEADERS.TITLE],\n            text: newsItem[DBConstants.values.news.COLUMN_HEADERS.TEXT],\n            image: newsItem[DBConstants.values.news.COLUMN_HEADERS.IMAGE]\n        })\n    });\n\n    return news.reverse();\n}\n\n// ##########################################################\n// SCHEDULE\n// ##########################################################\n\n/*\n    Function that fetches and handles videos to play from google sheets\n */\nexport const checkForScheduledShow = (playScheduledProgramming, handleFetchingPlaylist) => {\n    if (dataCache[DBConstants.SCHEDULE] !== undefined) {\n        let videoToPlay = checkForVideoToPlay(dataCache[DBConstants.SCHEDULE]);\n\n        // If we have a video to play, lets call our callback function with the video's videoId and startTime\n        if (videoToPlay.shouldPlay) {\n            playScheduledProgramming(videoToPlay.videoId, videoToPlay.startTime);\n        } else if (handleFetchingPlaylist) {\n            handleFetchingPlaylist();\n        }\n    } else {\n        // Initiate the http request object\n        const Http = new XMLHttpRequest();\n\n        const url = buildScheduleURL();\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let scheduleData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let scheduledShows = scheduleData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.SCHEDULE] = scheduledShows;\n\n                    let videoToPlay = checkForVideoToPlay(scheduledShows);\n\n                    // If we have a video to play, lets call our callback function with the video's videoId and startTime\n                    if (videoToPlay.shouldPlay) {\n                        playScheduledProgramming(videoToPlay.videoId, videoToPlay.startTime);\n                    } else if (handleFetchingPlaylist) {\n                        handleFetchingPlaylist();\n                    }\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\nexport const fetchSchedule = (callback) => {\n    if (dataCache[DBConstants.SCHEDULE] !== undefined) {\n        callback(dataCache[DBConstants.SCHEDULE]);\n    } else {\n        // Initiate the http request object\n        const Http = new XMLHttpRequest();\n\n        const url = buildScheduleURL();\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and check if we have a video to play\n                    let scheduleData = JSON.parse(Http.responseText);\n\n                    // Get rid of the first row of the sheet\n                    let scheduledShows = scheduleData.values.splice(1);\n\n                    // Assign response to dataCache[DBConstants.SCHEDULE]\n                    dataCache[DBConstants.SCHEDULE] = scheduledShows;\n                    callback(dataCache[DBConstants.SCHEDULE]);\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n\n/*\n    Function that will build the URL that is hit to fetch scheduled show data\n */\nconst buildScheduleURL = () => {\n    let url = DBConstants.URL_ROOT;\n\n    url += \"/\" + DBConstants.values.schedule.DB_ID;\n\n    url += \"/values/\" + DBConstants.values.schedule.DB_VALUES;\n\n    url += \"?key=\" + APIConstants.KEY;\n\n    return url;\n}\n\n/* \n    Function that will take the array of arrays of scheduled shows and convert it to an array of objects\n */\nexport const parseScheduleData = (scheduleData) => {\n    let shows = [];\n\n    // Iterate over the scheduleData and turn each array entry into an object\n    scheduleData.forEach(function (show) {\n        shows.push({\n            title: show[DBConstants.values.schedule.COLUMN_HEADERS.SHOW_TITLE],\n            videoId: show[DBConstants.values.schedule.COLUMN_HEADERS.VIDEO_ID],\n            startDate: Date.parse(show[DBConstants.values.schedule.COLUMN_HEADERS.START_DATE]),\n            endDate: Date.parse(show[DBConstants.values.schedule.COLUMN_HEADERS.END_DATE]),\n        });\n    });\n\n    return shows;\n}\n\nexport const formatTimeSpanString = (props) => {\n    let startDate = new Date(props.startDate);\n    let startDateString = startDate.toString();\n\n    let endDate = new Date(props.endDate);\n    let endDateString = endDate.toString();\n\n    startDateString = startDateString.substring(0, startDateString.indexOf('GMT'));\n\n    endDateString = endDateString.substring(16);\n\n    return (\n        <div>\n            {startDateString} - {endDateString}\n        </div>\n    );\n}\n\n/*\n    Function that will take in scheduleData retreived from google sheets and determine if a video should play\n */\nconst checkForVideoToPlay = (scheduledShows) => {\n    // Convert show data to array of objects\n    let showObjects = parseScheduleData(scheduledShows);\n\n    // Get current time so we know what time we should be looking for in the shows\n    let currentTime = Date.now();\n\n    // Placeholder of video to play\n    let videoToPlay = {\n        shouldPlay: false,\n    };\n\n    // Iterate over each show object to check if we should play it\n    showObjects.forEach(function (show) {\n        if (show.startDate < currentTime && show.endDate > currentTime) {\n            // It looks like we have a show that should play\n            let startTime = 0;\n\n            // Check to see if we're tuning in late!\n            if (currentTime - show.startDate > 60000) {\n                // If we are, adjust the startTime to where we should be\n                startTime = (currentTime - show.startDate) / 1000;\n            }\n\n            // Set videoToPlay to the video as an object with its' videoId and startTime\n            videoToPlay = {\n                shouldPlay: true,\n                videoId: show.videoId,\n                startTime: startTime\n            }\n        }\n    });\n\n    // If we have nothing to play\n    return videoToPlay;\n}","import React from 'react';\n\nexport class NewsContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"GrowingContainer\">\n                <img src={this.props.image} className=\"NewsImageContainer\" alt={this.props.title + \"_IMG\"} />\n                <div className=\"textContainer\">\n                    <h2>{this.props.title}</h2>\n                    <h4>{this.props.date}</h4>\n                    <p>{this.props.text}</p>\n                </div>\n            </div>\n        );\n    }\n}","export const scrollToTop = () => {\n    window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n    });\n}","import React from 'react';\n\nimport { fetchHipDadNews, parseNewsData } from '../util/DBUtil';\nimport { NewsContainer } from './NewsContainer';\nimport { scrollToTop } from '../util/AppUtil';\n/*\n    Container that holds the News page\n */\nexport class NewsPageContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            news: [],\n            visableNews: []\n        }\n\n        this.handleFetchedNews = this.handleFetchedNews.bind(this);\n        this.handleNewerStories = this.handleNewerStories.bind(this);\n        this.handleOlderStories = this.handleOlderStories.bind(this);\n        this.updateVisibleEpisodes = this.updateVisibleEpisodes.bind(this);\n    }\n\n    handleFetchedNews(news) {\n        let parsedNews = parseNewsData(news);\n\n        this.setState({\n            news: parsedNews,\n            visableNews: parsedNews.slice(0, 10)\n        });\n    }\n\n    updateVisibleEpisodes(page) {\n        this.setState({\n            visableNews: this.state.news.slice(page * 10, page * 10 + 10),\n            page: page\n        });\n    }\n\n    handleOlderStories() {\n        scrollToTop();\n        setTimeout((self) => {\n            self.updateVisibleEpisodes(self.state.page + 1)\n        }, 500, this);\n    }\n\n    handleNewerStories() {\n        scrollToTop();\n        setTimeout((self) => {\n            self.updateVisibleEpisodes(self.state.page - 1)\n        }, 500, this);\n    }\n\n    scrollToTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n\n    componentDidMount() {\n        fetchHipDadNews(this.handleFetchedNews);\n    }\n\n    render() {\n        const newerStoriesExist = this.state.page;\n        const olderStoriesExist = this.state.news.length > (this.state.page + 1) * 10;\n\n        return (\n            <div >\n                <h2>News</h2>\n                {this.state.visableNews.map(news => (\n                    <NewsContainer key={news.title} date={news.date} title={news.title} text={news.text} image={news.image} />\n                ))}\n                <br />\n                <button id=\"Newer News\" onClick={this.handleNewerStories} hidden={!newerStoriesExist}>Newer Stories</button>\n                <button id=\"Older News\" onClick={this.handleOlderStories} hidden={!olderStoriesExist}>Older Stories</button>\n            </div >\n        );\n    }\n}","import React from 'react';\n\nexport class DJ extends React.Component {\n    render() {\n        return (\n            <div className=\"GrowingContainer\">\n                <img src={this.props.image} className=\"NewsImageContainer\" alt={this.props.name + \"_IMG\"} />\n                <div className=\"DJContainer\">\n                    <h2>{this.props.name}</h2>\n                    <p>{this.props.bio}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { fetchHipDadDjs, parseDjs } from '../util/DBUtil';\nimport { DJ } from '../components/DJ';\n\nexport class DJContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            djs: []\n        }\n\n        this.handleFetchedDjs = this.handleFetchedDjs.bind(this);\n    }\n\n    handleFetchedDjs(djs) {\n        let parsedDjs = parseDjs(djs);\n\n        this.setState({\n            djs: parsedDjs\n        });\n    }\n\n    componentDidMount() {\n        fetchHipDadDjs(this.handleFetchedDjs);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Meet the DJs!</h3>\n                {this.state.djs.map(dj => (\n                    <DJ name={dj.name} bio={dj.bio} image={dj.image} key={dj.name} />\n                ))}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { DJContainer } from './DJContainer';\n\n/*\n    Container that holds the About page\n */\nexport class AboutContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>About Hip Dad Radio</h2>\n                <DJContainer />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { AboutContainer } from './AboutContainer';\n/*\n    Container that holds the Home page\n */\nexport class HomeContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <h2>You found us!</h2>\n                <h4>Here is a bit about Hip Dad Radio</h4>\n                <p>Words words words words words words words words words</p>\n                <AboutContainer />\n            </>\n        );\n    }\n}","import React from 'react';\n\nimport { formatTimeSpanString } from '../util/DBUtil';\n\nexport class ScheduledProgramDescriptor extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.title}<br/>\n                {formatTimeSpanString(this.props)}<br/>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { fetchSchedule, parseScheduleData } from '../util/DBUtil';\nimport { ScheduledProgramDescriptor } from '../components/ScheduledProgramDescriptor';\n\nexport class ScheduleContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            schedule: [],\n            upcomingShows: false\n        }\n\n        this.populateSchedule = this.populateSchedule.bind(this);\n    }\n\n    componentWillMount() {\n        fetchSchedule(this.populateSchedule);\n    }\n\n    populateSchedule(schedule) {\n        let scheduleData = parseScheduleData(schedule);\n\n        scheduleData = this.filterSchedule(scheduleData);\n\n        if (scheduleData.length > 0) {\n            this.setState({\n                schedule: scheduleData,\n                upcomingShows: true\n            });\n        }\n    }\n\n    filterSchedule(oldSchedule) {\n        let scheduleData = [];\n        const now = Date.now();\n        oldSchedule.forEach(show => {\n            let timeDif = show.endDate - now;\n            if (0 < timeDif && timeDif < 86400000) {\n                scheduleData.push(show);\n            }\n        });\n\n        return scheduleData;\n    }\n\n    render() {\n        return (\n            <h4 className=\"textContainer\">\n                <strong>\n                    Scheduled shows:\n                </strong>\n                <br />\n                {!this.state.upcomingShows ? 'No upcoming shows scheduled... Please check back tomorrow!' : ''}\n                {this.state.schedule.map(schedule => (\n                    <ScheduledProgramDescriptor title={schedule.title} startDate={schedule.startDate} endDate={schedule.endDate} key={schedule.title + schedule.startDate} />\n                ))}\n            </h4>\n        )\n    }\n}","import React from 'react';\nimport YouTube from 'react-youtube';\n\nexport class YouTubePlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            opts: {\n                height: '360',\n                width: '640',\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: false\n        };\n\n        this.goBigScreen = this.goBigScreen.bind(this);\n        this.goSmallScreen = this.goSmallScreen.bind(this);\n    }\n\n    goBigScreen() {\n        this.setState({\n            opts: {\n                height: window.innerHeight - 100,\n                width: window.innerWidth - 100,\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: true\n        });\n    }\n\n    goSmallScreen() {\n        this.setState({\n            opts: {\n                height: '360',\n                width: '640',\n                playerVars: {\n                    controls: 0\n                }\n            },\n            isBig: false\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div hidden={!this.props.visible} className=\"noInteraction\">\n                    <YouTube opts={this.state.opts} onReady={this.props.onInitialize} onStateChange={this.props.onStateChange} />\n                </div>\n                <div hidden={!this.props.visible}>\n                    <button onClick={this.goSmallScreen} hidden={!this.state.isBig}>Go Small</button>\n                    <button onClick={this.goBigScreen} hidden={this.state.isBig}>Go Big</button>\n                </div>\n            </>\n        )\n    }\n}","import React from 'react';\n\nconst Twitch = window.Twitch;\n\nexport class TwitchPlayer extends React.Component {\n    componentDidMount() {\n        this.props.onInitialize(new Twitch.Player(\"TwitchPlayer\", { channel: \"hipdadradio\" }));\n    }\n    render() {\n        return (\n            <>\n                <div id=\"TwitchPlayer\" className=\"noInteraction\" hidden={!this.props.visible} />\n                <div dangerouslySetInnerHTML={{ __html: `<iframe id=\"hipdadradio\" src=\"https://www.twitch.tv/embed/hipdadradio/chat\" scrolling=\"yes\" height=\"300\" width=\"640\"></iframe>` }} hidden={!this.props.visible} />\n            </>\n        );\n    }\n}","// We have several constants that we use throughout this file\nimport APIConstants from '../data/APIConstants.json';\n\n// Playlist cache\nlet playlistCache = {};\n\n/* \n    Function that will recursively fetch and populate an array of videoIds\n */\nexport const fetchPlaylistVideos = (playlistId, videoIds, nextPageToken, part, callback) => {\n    if (playlistCache[playlistId] !== undefined) {\n        // We already have the playlist cached so we don't need to make another call\n        callback(playlistCache[playlistId]);\n    } else {\n        // Initiate the http request object\n        let Http = new XMLHttpRequest();\n\n        // The tail of the request will include the playlist id as well as the API key\n        let requestTail = \"&playlistId=\" + playlistId + \"&key=\" + APIConstants.KEY;\n\n        // If we have been passed in a nextPageToken we will want to add that to the end of the requestTail as well\n        requestTail = nextPageToken ? requestTail + \"&pageToken=\" + nextPageToken : requestTail;\n\n        let url = 'https://www.googleapis.com/youtube/v3/playlistItems?part=' + part + '&maxResults=50' + requestTail;\n\n        // Function that will run once the Http request gets a response\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    // If we have a successful request, we will parse the response and append each item to the list of videoIds\n                    let playlistData = JSON.parse(Http.responseText);\n                    playlistData.items.forEach(function (item) {\n                        videoIds.push({\n                            videoId: item.contentDetails.videoId,\n                            title: item.snippet ? item.snippet.title : undefined,\n                            description: item.snippet ? item.snippet.description : undefined\n                        });\n                    });\n\n                    // If we have a nextPageToken in the response, that means there are more videos to fetch. \n                    if (playlistData.nextPageToken && playlistData.items.length < 199) {\n                        // That means that we will have to fetch more videos! \n                        fetchPlaylistVideos(playlistId, videoIds, playlistData.nextPageToken, part, callback);\n                    } else {\n                        // Assign the videoIds to the playlistCache\n                        playlistCache[playlistId] = videoIds;\n\n                        // Otherwise we have all the videos we need and can start the player\n                        callback(videoIds);\n                    }\n                } else {\n                    console.error(Http.statusText);\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"GET\", url, true);\n        Http.send();\n    }\n}\n","/*\n    Shuffle helper function randomly reorders an array and returns it\n */\nexport const shuffle = (array) => {\n   for (let i = array.length - 1; i > 0; i--) {\n       const j = Math.floor(Math.random() * (i + 1));\n       [array[i], array[j]] = [array[j], array[i]];\n   }\n   return array;\n}","import React from 'react';\n\nexport const VideoHeader = (props) => {\n    return (\n        <h4 className=\"textContainer\">\n            <strong>\n                You're Listening to HDR <br />\n                Now Playing: {props.videoTitle} <br />\n                Number of Listeners: {props.numberOfListeners} <br />\n            </strong>\n        </h4>\n    )\n}","import React from 'react';\n\nimport { ScheduleContainer } from '../containers/ScheduleContainer';\nimport { YouTubePlayer } from '../components/YouTubePlayer';\nimport { TwitchPlayer } from '../components/TwitchPlayer';\nimport { checkForScheduledShow } from '../util/DBUtil';\nimport { fetchPlaylistVideos } from '../util/YouTubeUtil';\nimport { shuffle } from '../util/DataUtil';\nimport { VideoHeader } from './VideoHeader';\n\nimport PlayerConstants from '../data/PlayerConstants.json';\nimport YTConstants from '../data/YTConstants.json';\n\nconst Twitch = window.Twitch;\n\n// The playlist ID we use to populate a player\nconst PLAYLIST_ID = YTConstants.PLAYLIST_ID\n\n// Variable to keep track of how many seconds the player has waited to start\nlet unstartedSeconds = 0;\n\n\n/*\n    Container that holds the Player page\n */\nexport class Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePlayer: \"\",\n            playing: \"\",\n            videoTitle: \"...\",\n            numberOfListeners: Math.round(Math.random() * 100),\n            twitchPlayer: undefined,\n            youTubePlayer: undefined\n        };\n\n        this.bindTwitchPlayer = this.bindTwitchPlayer.bind(this);\n        this.bindYouTubePlayer = this.bindYouTubePlayer.bind(this);\n        this.showTwitch = this.showTwitch.bind(this);\n        this.hideTwitch = this.hideTwitch.bind(this);\n        this.startYouTubePlayerRunner = this.startYouTubePlayerRunner.bind(this);\n        this.startBlockedYouTubeVideoChecker = this.startBlockedYouTubeVideoChecker.bind(this);\n        this.handleFetchingPlaylist = this.handleFetchingPlaylist.bind(this);\n        this.startYouTubePlayer = this.startYouTubePlayer.bind(this);\n        this.playScheduledProgramming = this.playScheduledProgramming.bind(this);\n        this.handleYouTubeStateChange = this.handleYouTubeStateChange.bind(this);\n    }\n\n    bindTwitchPlayer(twitchPlayer) {\n        // Add twitch event listeners here\n        this.setState({ twitchPlayer });\n\n        twitchPlayer.addEventListener(Twitch.Player.PLAYING, this.showTwitch);\n        twitchPlayer.addEventListener(Twitch.Player.OFFLINE, this.hideTwitch);\n    }\n\n    showTwitch() {\n        this.setState({ volume: this.state.youTubePlayer.getVolume() });\n\n        let fadeOutId = setInterval(function (self) {\n            if (self.state.volume > 0) {\n                let newVolume = self.state.volume - 5;\n                self.state.youTubePlayer.setVolume(newVolume);\n                self.setState({ volume: newVolume });\n            }\n        }, 250, this);\n\n        setTimeout(function (self) {\n            clearInterval(fadeOutId);\n\n            self.setState({\n                activePlayer: PlayerConstants.TWITCH,\n                videoTitle: \"Hip Dad Radio: LIVE\"\n            });\n\n            if (self.state.youTubePlayer) {\n                self.state.youTubePlayer.pauseVideo();\n            }\n        }, 5000, this);\n    }\n\n    hideTwitch() {\n        this.setState({\n            activePlayer: PlayerConstants.YOUTUBE,\n            volume: this.state.youTubePlayer ? this.state.youTubePlayer.getVolume() : 100\n        });\n\n        if (this.state.youTubePlayer) {\n            this.state.youTubePlayer.playVideo();\n        }\n\n        if (this.state.volume < 100) {\n            this.setState({});\n\n            let fadeInId = setInterval(function (self) {\n                if (self.state.volume < 100) {\n                    let newVolume = self.state.volume + 5;\n                    self.state.youTubePlayer.setVolume(newVolume);\n                    self.setState({ volume: newVolume });\n                }\n            }, 250, this);\n\n            setTimeout(function (self) {\n                clearInterval(fadeInId);\n            }, 5000, this)\n        }\n    }\n\n    bindYouTubePlayer(event) {\n        this.setState({ youTubePlayer: event.target });\n\n        // Check for scheduled programming\n        checkForScheduledShow(this.playScheduledProgramming, this.handleFetchingPlaylist);\n\n        // Start the player runner\n        this.startYouTubePlayerRunner();\n\n        // Start the blocked video checker\n        this.startBlockedYouTubeVideoChecker();\n    }\n\n    /*\n        Function that will start a runner that checks the youtube player state every second\n        Handles state appropriately\n    */\n    startYouTubePlayerRunner() {\n        setInterval(function (self) {\n            if (self.state.playing === PlayerConstants.HDR) {\n                // If HDR is playing we want to check for programming\n                checkForScheduledShow(self.playScheduledProgramming);\n            } else if (self.state.playing === PlayerConstants.PROGRAMMING) {\n                // If programming is already playing we don't really care\n                return;\n            }\n        }, 60000, this);\n    }\n\n    /*\n        Function that will check every second to see if a video playing is blocked and should be skipped\n    */\n    startBlockedYouTubeVideoChecker() {\n        setInterval(\n            function (self) {\n                self.setState({ numberOfListeners: self.state.numberOfListeners + (Math.round(Math.random() * 2 - 1)) })\n\n                // If we're playing the playlist check the state of the player\n                if (self.state.playing === PlayerConstants.HDR) {\n                    // If we've been waiting over 2 seconds, skip the video\n                    if (unstartedSeconds > 2) {\n                        // Play the next video and reset the count\n                        self.state.youTubePlayer.nextVideo();\n                        unstartedSeconds = 0;\n                    } else if (self.state.youTubePlayer.getPlayerState() === YTConstants.UNSTARTED) {\n                        // Increment the number of seconds we've been waiting\n                        unstartedSeconds += 1;\n                    } else {\n                        unstartedSeconds = 0;\n                    }\n                }\n            }, 1000, this);\n    }\n\n    /* \n        Helper function that calls fetchPlaylistVideos with all necessary parameters\n     */\n    handleFetchingPlaylist() {\n        // Fetch the playlist videos\n        fetchPlaylistVideos(PLAYLIST_ID, [], undefined, \"contentDetails\", this.startYouTubePlayer);\n    }\n\n    /*\n        Function that will play a scheduled program and update the state of the player\n     */\n    playScheduledProgramming(videoID, startTime) {\n        // Load the video into the player and play it\n        this.state.youTubePlayer.loadVideoById(videoID, startTime);\n        this.state.youTubePlayer.playVideo();\n\n        // Update the currentlyPlaying variable to signal that we're playing scheduled programming\n        this.setState({\n            playing: PlayerConstants.PROGRAMMING,\n            activePlayer: PlayerConstants.YOUTUBE\n        });\n    }\n\n    /* \n        Function that loads a passed in array of videoIds and starts the player\n    */\n    startYouTubePlayer(videos) {\n        videos = videos.map(video => video.videoId)\n\n        this.state.youTubePlayer.loadPlaylist({\n            playlist: shuffle(videos)\n        });\n\n        if (this.state.activePlayer === PlayerConstants.YOUTUBE) {\n            this.state.youTubePlayer.playVideo();\n            this.setState({ playing: PlayerConstants.HDR });\n        }\n    }\n\n    handleYouTubeStateChange(event) {\n        switch (event.data) {\n            case YTConstants.PLAYING:\n                this.setState({\n                    'videoTitle': this.state.youTubePlayer.getVideoData().title,\n                });\n                break;\n            default:\n                break;\n        }\n        // If we're playing scheduled programming\n        if (this.state.playing === PlayerConstants.PROGRAMMING) {\n            // If the programming has ended, we want to checkForScheduledShow again \n            // in case there's something else we should play\n            switch (event.data) {\n                case YTConstants.ENDED:\n                    checkForScheduledShow(this.playScheduledProgramming, this.handleFetchingPlaylist);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <VideoHeader videoTitle={this.state.videoTitle} numberOfListeners={this.state.numberOfListeners} />\n                <YouTubePlayer onInitialize={this.bindYouTubePlayer} onStateChange={this.handleYouTubeStateChange} visible={this.state.activePlayer === PlayerConstants.YOUTUBE && this.state.youTubePlayer} />\n                <TwitchPlayer onInitialize={this.bindTwitchPlayer} visible={this.state.activePlayer === PlayerConstants.TWITCH && this.state.twitchPlayer} />\n                <ScheduleContainer />\n            </>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Player } from '../components/Player';\n\n/*\n    Container that holds the Player\n */\nexport class PlayerContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <Player />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.1059772933';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLScIj6qyeZSeUX62cCstOZSuVTQIXMjR-ci7J9NSArSuoCWbVQ/formResponse';\n\nexport class MailingListFormContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            value: '',\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.value);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We now have your email address and will sell it to anyone who wants to buy it.\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            value: ''\n        });\n        document.getElementById('mailingListEmail').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\" >\n                <h2>Join Our Mailing List!<button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Looking for more?</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Join our mailing list for updates on all things Hip Dad Radio!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"mailingListEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"mailingListEmail\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} /> <br />\n                        </p>\n                    </section>\n                    <button id=\"MailingListSubmit\" type='submit' hidden={!this.state.value}>Get Those Updates!</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_FIRST_NAME_ID = 'entry.984192258';\nconst GOOGLE_FORM_LAST_NAME_ID = 'entry.327263638';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.1665212900';\nconst GOOGLE_FORM_WHY_ID = 'entry.643621519';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLSf-NgZa7cYLvzydCIHJLzMvSR5WrPG-08c9rm70aYZwh5R_dg/formResponse';\n\nexport class DJApplicationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            why: ''\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleWhyChange = this.handleWhyChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleFirstNameChange(event) {\n        this.setState({ firstName: event.target.value });\n    }\n\n    handleLastNameChange(event) {\n        this.setState({ lastName: event.target.value });\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    handleWhyChange(event) {\n        this.setState({ why: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_FIRST_NAME_ID, this.state.firstName);\n        formData.append(GOOGLE_FORM_LAST_NAME_ID, this.state.lastName);\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\n        formData.append(GOOGLE_FORM_WHY_ID, this.state.why);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We will reach out to you to see what DJ oportunities are available.\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            firstName: '',\n            lastName: '',\n            email: '',\n            why: ''\n        });\n        document.getElementById('applicationFirstName').value = '';\n        document.getElementById('applicationLastName').value = '';\n        document.getElementById('applicationEmail').value = '';\n        document.getElementById('applicationWhy').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\" >\n                <h2>Be a Hip Dad DJ!<button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Tell us who you are</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Want to be a Hip Dad Radio DJ? Tell us why!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"applicationFirstName\">\n                                <span>First Name: </span>\n                            </label>\n                            <input id=\"applicationFirstName\" name=\"firstName\" value={this.state.firstName} onChange={this.handleFirstNameChange} />\n                        </p>\n                        <p hidden={!this.state.firstName}>\n                            <label htmlFor=\"applicationLastName\">\n                                <span>Last Name: </span>\n                            </label>\n                            <input id=\"applicationLastName\" name=\"lastName\" value={this.state.lastName} onChange={this.handleLastNameChange} />\n                        </p>\n                        <p hidden={!(this.state.lastName && this.state.firstName)}>\n                            <label htmlFor=\"applicationEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"applicationEmail\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\n                        </p>\n                        <p hidden={!(this.state.email && this.state.lastName && this.state.firstName)}>\n                            <label htmlFor=\"applicationWhy\">\n                                <span>Why HDR: </span>\n                            </label>\n                            <textarea id=\"applicationWhy\" name=\"why\" value={this.state.why} onChange={this.handleWhyChange} rows=\"3\" cols=\"60\" />\n                        </p>\n                    </section>\n                    <button id=\"SubmitButton\" type='submit' hidden={!(this.state.why && this.state.email && this.state.lastName && this.state.firstName)}>Welcome, DJ {this.state.firstName}</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst CORS_ROOT = 'https://cors-hipdadradio.herokuapp.com/';\nconst GOOGLE_FORM_BAND_NAME_ID = 'entry.267308415';\nconst GOOGLE_FORM_NAME_ID = 'entry.1428062257';\nconst GOOGLE_FORM_EMAIL_ID = 'entry.2009621913';\nconst GOOGLE_FORM_WEBSITE_ID = 'entry.1224946671';\nconst GOOGLE_FORM_ACTION_URL = 'https://docs.google.com/forms/d/e/1FAIpQLSfkAY3wK8ORxS4DS2XUu5ch5Xpu6UljrBcuzWVkOW76OWXvyg/formResponse';\n\nexport class ArtistApplicationContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            started: false,\n            bandName: '',\n            name: '',\n            email: '',\n            website: ''\n        };\n\n        this.startForm = this.startForm.bind(this);\n        this.handleBandNameChange = this.handleBandNameChange.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handleWebsiteChange = this.handleWebsiteChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    startForm() {\n        this.setState({ started: true });\n    }\n\n    handleBandNameChange(event) {\n        this.setState({ bandName: event.target.value });\n    }\n\n    handleNameChange(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    handleEmailChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    handleWebsiteChange(event) {\n        this.setState({ website: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formData = new FormData();\n\n        formData.append(GOOGLE_FORM_BAND_NAME_ID, this.state.bandName);\n        formData.append(GOOGLE_FORM_NAME_ID, this.state.name);\n        formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\n        formData.append(GOOGLE_FORM_WEBSITE_ID, this.state.website);\n\n        const Http = new XMLHttpRequest();\n\n        const url = CORS_ROOT + GOOGLE_FORM_ACTION_URL;\n\n        Http.onload = function (e) {\n            if (Http.readyState === 4) {\n                if (Http.status === 200) {\n                    alert(\"Success! We will reach out to you to see what we can make happen!\")\n                } else {\n                    alert(\"Sorry! Something went wrong... Please try to submit the form again.\");\n                }\n            }\n        };\n\n        // Code to execute the http request\n        Http.open(\"POST\", url, true);\n        Http.send(formData);\n        this.setState({\n            started: false,\n            bandName: '',\n            name: '',\n            email: '',\n            website: ''\n        });\n        document.getElementById('artistBandName').value = '';\n        document.getElementById('artistName').value = '';\n        document.getElementById('artistEmail').value = '';\n        document.getElementById('artistWebsite').value = '';\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\" >\n                <h2>Do a Live Session on Hip Dad Radio! <button className=\"formButton\" onClick={this.startForm} hidden={this.state.started}>Tell us about your Band</button></h2>\n                <form onSubmit={this.handleSubmit} hidden={!this.state.started}>\n                    <h4>Are you a muscian and want to perform LIVE on Hip Dad Radio? We'd love to have you on!</h4>\n                    <section>\n                        <p>\n                            <label htmlFor=\"artistBandName\">\n                                <span>Band Name: </span>\n                            </label>\n                            <input id=\"artistBandName\" name=\"bandName\" value={this.state.bandName} onChange={this.handleBandNameChange} />\n                        </p>\n                        <p hidden={!this.state.bandName}>\n                            <label htmlFor=\"artistName\">\n                                <span>Your Name: </span>\n                            </label>\n                            <input id=\"artistName\" name=\"name\" value={this.state.name} onChange={this.handleNameChange} />\n                        </p>\n                        <p hidden={!(this.state.name && this.state.bandName)}>\n                            <label htmlFor=\"artistEmail\">\n                                <span>Email: </span>\n                            </label>\n                            <input id=\"artistEmail\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\n                        </p>\n                        <p hidden={!(this.state.email && this.state.name && this.state.bandName)}>\n                            <label htmlFor=\"artistWebsite\">\n                                <span>Bandcamp: </span>\n                            </label>\n                            <input id=\"artistWebsite\" name=\"website\" value={this.state.website} onChange={this.handleWebsiteChange} />\n                        </p>\n                    </section>\n                    <button id=\"SubmitButton\" type='submit' hidden={!(this.state.website && this.state.email && this.state.name && this.state.bandName)}>Get {this.state.bandName} on HDR!</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { MailingListFormContainer } from './MailingListFormContainer';\nimport { DJApplicationContainer } from './DJApplicationContainer';\nimport { ArtistApplicationContainer } from './ArtistApplicationContainer';\n\nexport class ContactContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <MailingListFormContainer />\n                <DJApplicationContainer />\n                <ArtistApplicationContainer />\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport class PhotoArchiveListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleClick({\n            title: this.props.title,\n            author: this.props.author,\n            description: this.props.description,\n            photos: this.props.photos\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"textContainer\">\n                <button onClick={this.handleClick}>\n                    <h3>{this.props.title}</h3>\n                    <h4>{this.props.author}</h4>\n                    <img className=\"photoArchiveCoverImg\" src={this.props.imgSrc} alt={this.props.title} />\n                    <p>{this.props.description}</p>\n                </button>\n                <br />\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\n\nexport class PhotoArchivePhoto extends React.Component {\n    render() {\n        return (\n            <div className=\"imageArchiveContainer\">\n                <img className=\"photoArchiveImg\" src={this.props.imgSrc} alt={this.props.imgSrc} />\n                <p>{this.props.desc}</p>\n                <br />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport class BackToArchiveButton extends React.Component {\n    render() {\n        return (\n            <button onClick={this.props.handleClick} style={{ float: \"right\" }}>Back to Archives</button>\n        )\n    }\n}","import React from 'react';\n\nimport { PhotoArchiveListItem } from '../components/PhotoArchiveListItem'\nimport { PhotoArchivePhoto } from '../components/PhotoArchivePhoto';\nimport { fetchPhotoArchives, parsePhotoData } from '../util/DBUtil';\nimport { BackToArchiveButton } from '../components/BackToArchiveButton';\nimport { scrollToTop } from '../util/AppUtil';\n\nexport class PhotoPageContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            archives: [],\n            selected: {\n                photos: []\n            },\n            albumSelected: false\n        }\n\n        this.handleFetchedPhotos = this.handleFetchedPhotos.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.unSelect = this.unSelect.bind(this);\n    }\n\n    handleFetchedPhotos(photoData) {\n        let archives = parsePhotoData(photoData);\n\n        this.setState({ archives });\n    }\n\n    componentDidMount() {\n        fetchPhotoArchives(this.handleFetchedPhotos);\n    }\n\n    handleSelection(selected) {\n        scrollToTop();\n        setTimeout((self) => {\n            self.setState({\n                selected: selected,\n                albumSelected: true\n            });\n        }, 500, this);\n    }\n\n    unSelect() {\n        scrollToTop();\n        setTimeout((self) => {\n            self.setState({\n                selected: { photos: [] },\n                albumSelected: false\n            });\n        }, 500, this);\n    }\n\n    render() {\n        return (\n            <>\n                <h2>Photo Archive</h2>\n                <div hidden={this.state.albumSelected}>\n                    {this.state.archives.map(archive => (\n                        <PhotoArchiveListItem key={archive.title} imgSrc={archive.photos[0].imgSrc} title={archive.title} description={archive.description} author={archive.author} handleClick={this.handleSelection} photos={archive.photos} />\n                    ))}\n                </div>\n                <div hidden={!this.state.albumSelected} className=\"imageArchiveContainer\">\n                    <BackToArchiveButton handleClick={this.unSelect} />\n                    <h3>{this.state.selected.title}</h3>\n                    <h4>{this.state.selected.author}</h4>\n                    {this.state.selected.photos.map(photo => (\n                        <PhotoArchivePhoto imgSrc={photo.imgSrc} desc={photo.desc} />\n                    ))}\n                    <BackToArchiveButton handleClick={this.unSelect} />\n                </div>\n            </>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\n/*\n    Container that holds a YouTube video\n */\nexport const YouTubeVideoContainer = (props) => {\n    return (\n        <div>\n            <h3 className=\"textContainer\">{props.title}</h3>\n            <YouTube videoId={props.src} />\n            <p className=\"textContainer\">{props.description}</p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { YouTubeVideoContainer } from './YouTubeVideoContainer';\nimport { fetchPlaylistVideos } from '../util/YouTubeUtil';\nimport { scrollToTop } from '../util/AppUtil';\n\n/*\n    Container that holds a YouTube playlist\n */\nexport class YouTubePlaylistContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            episodes: [],\n            visableEpisodes: [],\n            page: 0\n        };\n\n        this.updateVisibleEpisodes = this.updateVisibleEpisodes.bind(this);\n        this.initialEpisodePopulation = this.initialEpisodePopulation.bind(this);\n        this.handleOlderEpisodes = this.handleOlderEpisodes.bind(this);\n        this.handleNewerEpisodes = this.handleNewerEpisodes.bind(this);\n    }\n\n    initialEpisodePopulation(episodes) {\n        this.setState({\n            episodes: episodes,\n            visableEpisodes: episodes.slice(0, 5)\n        })\n    }\n\n    updateVisibleEpisodes(page) {\n        this.setState({\n            visableEpisodes: this.state.episodes.slice(page * 5, page * 5 + 5),\n            page: page\n        });\n    }\n\n    handleOlderEpisodes() {\n        scrollToTop();\n        setTimeout((self) => {\n            self.updateVisibleEpisodes(self.state.page + 1)\n        }, 200, this);\n    }\n\n    handleNewerEpisodes() {\n        scrollToTop();\n        setTimeout((self) => {\n            self.updateVisibleEpisodes(self.state.page - 1)\n        }, 200, this);\n    }\n\n    componentWillMount() {\n        fetchPlaylistVideos(this.props.playlistId, [], undefined, \"contentDetails,snippet\", this.initialEpisodePopulation)\n    }\n\n    render() {\n        // It will render a YouTubeVideoContainer for each episode in its' passed in props.episodes\n        const newerVideosExist = this.state.page;\n        const olderVideosExist = this.state.episodes.length > (this.state.page + 1) * 5;\n\n        return (\n            <div>\n                {this.state.visableEpisodes.map(episode => (\n                    <YouTubeVideoContainer key={episode.videoId} src={episode.videoId} title={episode.title} description={episode.description} />\n                ))}\n                <button id=\"Newer Episode\" onClick={this.handleNewerEpisodes} hidden={!newerVideosExist}>Newer Videos</button>\n                <button id=\"Older Episodes\" onClick={this.handleOlderEpisodes} hidden={!olderVideosExist}>Older Videos</button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { YouTubePlaylistContainer } from './YouTubePlaylistContainer';\n\n/*\n    Container that holds a Show page\n */\nexport class ShowContainer extends React.Component {\n    render() {\n        // Translate the filtered playlist data into YouTubePlaylistContainer components\n        return (\n            <>\n                <button onClick={this.props.backToShows}>Back to Shows</button>\n                <h2>{this.props.title} Archive</h2>\n                <div>\n                    <YouTubePlaylistContainer playlistId={this.props.playlistId} />\n                </div>\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport class ShowButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleClick(this.props.title, this.props.playlistId);\n    }\n\n    render() {\n        return (\n            <>\n                <button className=\"showBox\" onClick={this.handleClick}>\n                    <h3>{this.props.title}</h3>\n                    <img className=\"showImageContainer\" src={this.props.imagesrc} alt={this.props.title} />\n                    <p className=\"textContainer\">{this.props.desc}</p>\n                </button>\n                <br />\n            </>\n        );\n    }\n}","import React from 'react';\n\nimport { ShowContainer } from '../containers/ShowContainer';\nimport { ShowButton } from '../components/ShowButton';\nimport { fetchShowsList, parseShows } from '../util/DBUtil';\n\nexport class ShowsPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showSelected: false,\n            title: '',\n            playlistId: '',\n            showList: []\n        };\n\n        this.handleFetchedShows = this.handleFetchedShows.bind(this);\n        this.showSelected = this.showSelected.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleFetchedShows(shows) {\n        let showList = parseShows(shows);\n\n        this.setState({ showList });\n    }\n\n    componentDidMount() {\n        fetchShowsList(this.handleFetchedShows);\n    }\n\n    showSelected(title, playlistId) {\n        this.setState({\n            showSelected: true,\n            title: title,\n            playlistId: playlistId\n        })\n    }\n\n    clearSelection() {\n        this.setState({\n            showSelected: false,\n            title: '',\n            playlistId: ''\n        })\n    }\n\n    render() {\n        let showContainer = null;\n\n        if (this.state.showSelected) {\n            showContainer = (<div hidden={!this.state.showSelected}>\n                <ShowContainer backToShows={this.clearSelection} hidden={!this.showSelected} playlistId={this.state.playlistId} title={this.state.title} />\n            </div>);\n        }\n\n        return (\n            <>\n                <div hidden={this.state.showSelected}>\n                    {this.state.showList.map(show => (\n                        <ShowButton handleClick={this.showSelected} key={show.title} title={show.title} imagesrc={show.imagesrc} desc={show.desc} playlistId={show.playlistId} />\n                    ))}\n                </div>\n                {showContainer}\n            </>\n        );\n    }\n}","import React from 'react';\n\nimport { NewsPageContainer } from './containers/NewsPageContainer';\nimport { HomeContainer } from './containers/HomeContainer';\nimport { PlayerContainer } from './containers/PlayerContainer';\nimport { ContactContainer } from './containers/ContactContainer';\nimport { PhotoPageContainer } from './containers/PhotoPageContainer';\nimport { ShowsPage } from './pages/ShowsPage';\n\n// Home Page\nexport const Home = () => {\n  return <HomeContainer />;\n}\n\n// News page\nexport const News = () => {\n  return <NewsPageContainer />;\n}\n\nexport const Listen = () => {\n  return <PlayerContainer />;\n}\n\nexport const ContactUs = () => {\n  return <ContactContainer />\n}\n\nexport const Photos = () => {\n  return <PhotoPageContainer />\n}\n\nexport const Shows = () => {\n  return <ShowsPage />\n}","import React from 'react';\n\nimport logo from '../img/logo.png'\n\nexport const Logo = () => {\n    return <img src={logo} alt=\"Logo\" className=\"Logo\"/>\n}","import React from 'react';\n\nexport class PlatformLinkContainer extends React.Component {\n    render() {\n        return (\n            <>\n                <h3>Check us out on our platforms.</h3>\n                <p>\n                    <a className=\"ImageLinks\" href=\"https://www.instagram.com/hipdadradio/\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"LogoImageContainer\" src=\"http://www.transparentpng.com/thumb/logo-instagram/eerDTf-logo-instagram-clipart-transparent.png\" alt=\"instagramLogo\" /></a>\n                    <a className=\"ImageLinks\" href=\"https://www.youtube.com/channel/UCfdin8x2dLREvJ5M-qAYU3A\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"LogoImageContainer\" src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c545.png\" alt=\"youtubeLogo\" /></a>\n                </p>\n            </>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\nimport { News, Home, Listen, ContactUs, Photos, Shows } from './AppRouter';\nimport { Logo } from './components/Logo';\nimport { PlatformLinkContainer } from './containers/PlatformLinkContainer';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"Header\" id=\"top\">\n          <Logo />\n          <h1>Welcome to Hip Dad Radio!!</h1>\n          <Logo />\n        </header>\n        <nav>\n          <ul>\n            <NavLink to=\"/\" exact activeClassName=\"active\">Home</NavLink>\n            <NavLink to=\"/news/\" exact activeClassName=\"active\">News</NavLink>\n            <NavLink to=\"/listen/\" exact activeClassName=\"active\">Listen</NavLink>\n            <NavLink to=\"/contact/\" exact activeClassName=\"active\">Contact Us</NavLink>\n            <NavLink to=\"/photos/\" exact activeClassName=\"active\">Photos</NavLink>\n            <NavLink to=\"/shows/\" exact activeClassName=\"active\">Shows</NavLink>\n          </ul>\n        </nav>\n        <Switch className=\"primary-content\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/news/\" component={News} />\n          <Route path=\"/listen/\" component={Listen} />\n          <Route path=\"/contact/\" component={ContactUs} />\n          <Route path=\"/photos/\" component={Photos} />\n          <Route path=\"/shows/\" component={Shows} />\n        </Switch>\n        <footer>\n          <PlatformLinkContainer />\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}